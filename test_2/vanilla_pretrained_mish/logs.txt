02/09/2020 04:07:29 AM 

---------------- [LOGS for vanilla_pretrained_mish] ----------------
02/09/2020 04:08:27 AM Freezing model
02/09/2020 04:08:28 AM Project path: test_2/vanilla_pretrained_mish
02/09/2020 04:08:28 AM Model: se_resnext50_32x4d
02/09/2020 04:08:28 AM Model class: <class 'model.ClassifierCNN'>
02/09/2020 04:08:28 AM Debug: False
02/09/2020 04:08:28 AM Batch size: 32
02/09/2020 04:08:28 AM LR: 0.0003
02/09/2020 04:08:28 AM Optimizer: <class 'torch.optim.adam.Adam'>
02/09/2020 04:08:28 AM Weights: [0.5 | 0.25 | 0.25]
02/09/2020 04:08:28 AM Activation: mish
02/09/2020 04:08:28 AM Mixup: False
02/09/2020 04:08:28 AM Cutmix: False
02/09/2020 04:08:28 AM Train dataset: <loaddata.BengaliAI object at 0x7fb31a91d6a0>
02/09/2020 04:08:28 AM Validation dataset: <loaddata.BengaliAI object at 0x7fb31a91d400>
02/09/2020 04:08:28 AM Continue: False
02/09/2020 04:08:28 AM Model: ClassifierCNN(
  (first): Conv2d(1, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (model): SENet(
    (layer0): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): Mish()
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    )
    (layer1): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer2): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer3): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (4): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (5): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer4): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
    (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (head_grapheme_root): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=168, bias=True)
  )
  (head_vowel_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=11, bias=True)
  )
  (head_consonant_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=7, bias=True)
  )
)
02/09/2020 04:08:28 AM ------------------------------------------------------------
02/09/2020 04:08:28 AM Starting training...
02/09/2020 04:08:28 AM Unfreezing model
02/09/2020 04:08:50 AM [1/50] | t_0 | R: 0.172 | [0.021 | 0.324 | 0.323] | A: [4.924% | 45.928% | 64.631%] | L: 3.007 | [4.665 | 1.615 | 1.083]
02/09/2020 04:08:51 AM [1/50] | v_0 | R: 0.329 | [0.081 | 0.481 | 0.670] | A: [13.937% | 65.124% | 79.662%] | L: 2.444 | [4.032 | 1.063 | 0.650]
02/09/2020 04:09:12 AM [2/50] | t_0 | R: 0.415 | [0.159 | 0.627 | 0.713] | A: [26.610% | 73.390% | 81.155%] | L: 1.944 | [3.195 | 0.812 | 0.573]
02/09/2020 04:09:14 AM [2/50] | v_0 | R: 0.496 | [0.216 | 0.719 | 0.832] | A: [35.378% | 81.467% | 89.539%] | L: 1.645 | [2.833 | 0.569 | 0.346]
02/09/2020 04:09:35 AM [3/50] | t_0 | R: 0.621 | [0.458 | 0.768 | 0.800] | A: [60.985% | 83.191% | 87.784%] | L: 0.988 | [1.549 | 0.501 | 0.353]
02/09/2020 04:09:36 AM [3/50] | v_0 | R: 0.577 | [0.324 | 0.787 | 0.874] | A: [47.510% | 83.272% | 90.257%] | L: 1.336 | [2.241 | 0.540 | 0.324]
02/09/2020 04:09:57 AM [4/50] | t_0 | R: 0.788 | [0.712 | 0.860 | 0.869] | A: [81.439% | 89.631% | 92.187%] | L: 0.500 | [0.721 | 0.322 | 0.237]
02/09/2020 04:09:59 AM [4/50] | v_0 | R: 0.591 | [0.367 | 0.793 | 0.836] | A: [51.504% | 84.225% | 89.372%] | L: 1.285 | [2.132 | 0.521 | 0.353]
02/09/2020 04:10:20 AM [5/50] | t_0 | R: 0.858 | [0.800 | 0.922 | 0.910] | A: [88.068% | 93.513% | 94.413%] | L: 0.302 | [0.414 | 0.210 | 0.171]
02/09/2020 04:10:21 AM [5/50] | v_0 | R: 0.577 | [0.349 | 0.798 | 0.812] | A: [50.485% | 85.678% | 88.803%] | L: 1.316 | [2.190 | 0.474 | 0.411]
02/09/2020 04:10:42 AM [6/50] | t_0 | R: 0.910 | [0.887 | 0.930 | 0.938] | A: [93.466% | 94.839% | 95.881%] | L: 0.190 | [0.249 | 0.154 | 0.107]
02/09/2020 04:10:44 AM [6/50] | v_0 | R: 0.606 | [0.381 | 0.814 | 0.846] | A: [52.991% | 87.333% | 89.723%] | L: 1.290 | [2.170 | 0.413 | 0.406]
02/09/2020 04:11:05 AM [7/50] | t_0 | R: 0.939 | [0.929 | 0.954 | 0.945] | A: [95.881% | 96.401% | 96.591%] | L: 0.130 | [0.153 | 0.115 | 0.099]
02/09/2020 04:11:06 AM [7/50] | v_0 | R: 0.613 | [0.417 | 0.804 | 0.814] | A: [56.835% | 85.511% | 89.004%] | L: 1.302 | [2.159 | 0.523 | 0.365]
02/09/2020 04:11:27 AM [8/50] | t_0 | R: 0.948 | [0.931 | 0.966 | 0.962] | A: [96.165% | 96.875% | 96.922%] | L: 0.119 | [0.143 | 0.097 | 0.092]
02/09/2020 04:11:29 AM [8/50] | v_0 | R: 0.625 | [0.426 | 0.797 | 0.850] | A: [57.938% | 86.046% | 90.458%] | L: 1.202 | [1.990 | 0.499 | 0.327]
02/09/2020 04:11:50 AM [9/50] | t_0 | R: 0.958 | [0.948 | 0.970 | 0.965] | A: [96.970% | 97.727% | 97.775%] | L: 0.085 | [0.109 | 0.065 | 0.059]
02/09/2020 04:11:51 AM [9/50] | v_0 | R: 0.642 | [0.421 | 0.850 | 0.876] | A: [58.690% | 89.171% | 92.296%] | L: 1.143 | [1.923 | 0.425 | 0.301]
02/09/2020 04:12:12 AM [10/50] | t_0 | R: 0.971 | [0.966 | 0.976 | 0.975] | A: [98.153% | 98.106% | 98.390%] | L: 0.065 | [0.074 | 0.061 | 0.050]
02/09/2020 04:12:14 AM [10/50] | v_0 | R: 0.608 | [0.387 | 0.816 | 0.842] | A: [55.197% | 87.350% | 89.188%] | L: 1.311 | [2.138 | 0.491 | 0.476]
02/09/2020 04:12:35 AM [11/50] | t_0 | R: 0.968 | [0.956 | 0.977 | 0.981] | A: [97.301% | 98.011% | 98.343%] | L: 0.088 | [0.116 | 0.062 | 0.059]
02/09/2020 04:12:36 AM [11/50] | v_0 | R: 0.619 | [0.395 | 0.815 | 0.872] | A: [55.932% | 88.803% | 91.009%] | L: 1.271 | [2.130 | 0.465 | 0.359]
02/09/2020 04:12:57 AM [12/50] | t_0 | R: 0.967 | [0.958 | 0.981 | 0.971] | A: [97.538% | 98.722% | 98.390%] | L: 0.070 | [0.094 | 0.045 | 0.047]
02/09/2020 04:12:59 AM [12/50] | v_0 | R: 0.639 | [0.419 | 0.844 | 0.875] | A: [57.771% | 88.820% | 90.642%] | L: 1.288 | [2.117 | 0.477 | 0.440]
02/09/2020 04:13:20 AM [13/50] | t_0 | R: 0.964 | [0.950 | 0.981 | 0.974] | A: [97.348% | 98.579% | 98.201%] | L: 0.075 | [0.099 | 0.050 | 0.051]
02/09/2020 04:13:21 AM [13/50] | v_0 | R: 0.630 | [0.407 | 0.863 | 0.843] | A: [56.868% | 90.107% | 90.274%] | L: 1.258 | [2.097 | 0.450 | 0.389]
02/09/2020 04:13:42 AM [14/50] | t_0 | R: 0.958 | [0.939 | 0.980 | 0.975] | A: [96.638% | 98.248% | 98.390%] | L: 0.081 | [0.112 | 0.053 | 0.048]
02/09/2020 04:13:44 AM [14/50] | v_0 | R: 0.621 | [0.406 | 0.815 | 0.857] | A: [57.035% | 88.085% | 91.561%] | L: 1.280 | [2.164 | 0.456 | 0.336]
02/09/2020 04:14:05 AM [15/50] | t_0 | R: 0.965 | [0.963 | 0.969 | 0.965] | A: [97.964% | 98.059% | 98.153%] | L: 0.076 | [0.091 | 0.062 | 0.059]
02/09/2020 04:14:07 AM [15/50] | v_0 | R: 0.641 | [0.444 | 0.846 | 0.829] | A: [60.896% | 89.906% | 90.107%] | L: 1.321 | [2.205 | 0.442 | 0.432]
02/09/2020 04:14:27 AM [16/50] | t_0 | R: 0.975 | [0.967 | 0.977 | 0.989] | A: [98.059% | 98.579% | 99.195%] | L: 0.054 | [0.071 | 0.043 | 0.031]
02/09/2020 04:14:29 AM [16/50] | v_0 | R: 0.654 | [0.456 | 0.838 | 0.865] | A: [61.464% | 89.555% | 92.480%] | L: 1.262 | [2.110 | 0.476 | 0.352]
02/09/2020 04:14:50 AM [17/50] | t_0 | R: 0.955 | [0.938 | 0.975 | 0.970] | A: [96.638% | 98.532% | 98.627%] | L: 0.084 | [0.120 | 0.044 | 0.052]
02/09/2020 04:14:52 AM [17/50] | v_0 | R: 0.637 | [0.439 | 0.811 | 0.858] | A: [59.241% | 87.701% | 91.561%] | L: 1.256 | [2.091 | 0.487 | 0.355]
02/09/2020 04:15:13 AM [18/50] | t_0 | R: 0.962 | [0.941 | 0.984 | 0.980] | A: [96.638% | 98.437% | 98.674%] | L: 0.078 | [0.111 | 0.046 | 0.043]
02/09/2020 04:15:14 AM [18/50] | v_0 | R: 0.630 | [0.411 | 0.844 | 0.854] | A: [57.604% | 88.787% | 91.026%] | L: 1.280 | [2.142 | 0.466 | 0.368]
02/09/2020 04:15:35 AM [19/50] | t_0 | R: 0.972 | [0.960 | 0.985 | 0.981] | A: [97.822% | 99.195% | 98.864%] | L: 0.052 | [0.071 | 0.032 | 0.035]
02/09/2020 04:15:37 AM [19/50] | v_0 | R: 0.643 | [0.446 | 0.821 | 0.858] | A: [60.361% | 88.453% | 92.296%] | L: 1.279 | [2.148 | 0.479 | 0.340]
02/09/2020 04:15:58 AM [20/50] | t_0 | R: 0.975 | [0.969 | 0.981 | 0.980] | A: [98.011% | 98.816% | 98.627%] | L: 0.056 | [0.069 | 0.043 | 0.041]
02/09/2020 04:15:59 AM [20/50] | v_0 | R: 0.667 | [0.457 | 0.838 | 0.915] | A: [60.896% | 88.803% | 91.009%] | L: 1.231 | [2.030 | 0.446 | 0.416]
02/09/2020 04:16:20 AM [21/50] | t_0 | R: 0.974 | [0.966 | 0.992 | 0.973] | A: [98.295% | 99.195% | 98.627%] | L: 0.050 | [0.068 | 0.028 | 0.034]
02/09/2020 04:16:22 AM [21/50] | v_0 | R: 0.655 | [0.425 | 0.878 | 0.893] | A: [59.241% | 90.993% | 90.826%] | L: 1.302 | [2.166 | 0.397 | 0.478]
02/09/2020 04:16:43 AM [22/50] | t_0 | R: 0.972 | [0.964 | 0.982 | 0.979] | A: [98.011% | 98.674% | 98.911%] | L: 0.053 | [0.066 | 0.040 | 0.039]
02/09/2020 04:16:44 AM [22/50] | v_0 | R: 0.647 | [0.447 | 0.862 | 0.831] | A: [60.328% | 87.701% | 89.906%] | L: 1.276 | [2.073 | 0.516 | 0.444]
02/09/2020 04:17:05 AM [23/50] | t_0 | R: 0.972 | [0.955 | 0.986 | 0.990] | A: [97.443% | 98.864% | 99.053%] | L: 0.069 | [0.103 | 0.038 | 0.031]
02/09/2020 04:17:07 AM [23/50] | v_0 | R: 0.652 | [0.442 | 0.855 | 0.868] | A: [59.977% | 89.906% | 90.625%] | L: 1.341 | [2.260 | 0.406 | 0.436]
02/09/2020 04:17:28 AM [24/50] | t_0 | R: 0.968 | [0.959 | 0.981 | 0.972] | A: [97.680% | 98.485% | 98.864%] | L: 0.060 | [0.074 | 0.050 | 0.042]
02/09/2020 04:17:29 AM [24/50] | v_0 | R: 0.629 | [0.419 | 0.820 | 0.857] | A: [59.241% | 85.127% | 90.274%] | L: 1.395 | [2.195 | 0.712 | 0.480]
02/09/2020 04:17:50 AM [25/50] | t_0 | R: 0.972 | [0.963 | 0.983 | 0.977] | A: [98.153% | 98.816% | 98.864%] | L: 0.054 | [0.066 | 0.045 | 0.038]
02/09/2020 04:17:52 AM [25/50] | v_0 | R: 0.625 | [0.415 | 0.806 | 0.862] | A: [58.890% | 88.620% | 90.642%] | L: 1.347 | [2.205 | 0.519 | 0.458]
02/09/2020 04:18:13 AM [26/50] | t_0 | R: 0.977 | [0.969 | 0.980 | 0.990] | A: [98.201% | 98.627% | 99.432%] | L: 0.056 | [0.075 | 0.049 | 0.027]
02/09/2020 04:18:14 AM [26/50] | v_0 | R: 0.661 | [0.463 | 0.837 | 0.881] | A: [62.182% | 89.355% | 91.928%] | L: 1.207 | [1.985 | 0.456 | 0.401]
02/09/2020 04:18:35 AM [27/50] | t_0 | R: 0.971 | [0.958 | 0.977 | 0.992] | A: [97.822% | 98.579% | 99.290%] | L: 0.055 | [0.074 | 0.041 | 0.031]
02/09/2020 04:18:37 AM [27/50] | v_0 | R: 0.661 | [0.457 | 0.854 | 0.875] | A: [61.430% | 91.009% | 91.561%] | L: 1.230 | [2.030 | 0.466 | 0.395]
02/09/2020 04:18:58 AM [28/50] | t_0 | R: 0.981 | [0.975 | 0.992 | 0.981] | A: [98.532% | 99.290% | 99.053%] | L: 0.048 | [0.069 | 0.024 | 0.030]
02/09/2020 04:18:59 AM [28/50] | v_0 | R: 0.651 | [0.463 | 0.833 | 0.845] | A: [61.965% | 89.154% | 91.009%] | L: 1.270 | [2.087 | 0.498 | 0.407]
02/09/2020 04:19:20 AM [29/50] | t_0 | R: 0.959 | [0.943 | 0.985 | 0.964] | A: [96.544% | 98.769% | 98.248%] | L: 0.075 | [0.109 | 0.039 | 0.043]
02/09/2020 04:19:22 AM [29/50] | v_0 | R: 0.655 | [0.456 | 0.837 | 0.871] | A: [60.912% | 88.636% | 90.658%] | L: 1.264 | [2.080 | 0.497 | 0.401]
02/09/2020 04:19:43 AM [30/50] | t_0 | R: 0.968 | [0.953 | 0.984 | 0.982] | A: [97.254% | 98.201% | 98.579%] | L: 0.072 | [0.097 | 0.054 | 0.042]
02/09/2020 04:19:45 AM [30/50] | v_0 | R: 0.608 | [0.404 | 0.798 | 0.828] | A: [55.983% | 86.781% | 90.274%] | L: 1.343 | [2.179 | 0.598 | 0.417]
02/09/2020 04:20:05 AM [31/50] | t_0 | R: 0.978 | [0.975 | 0.982 | 0.981] | A: [98.627% | 99.053% | 98.958%] | L: 0.038 | [0.045 | 0.034 | 0.029]
02/09/2020 04:20:07 AM [31/50] | v_0 | R: 0.647 | [0.454 | 0.835 | 0.843] | A: [60.946% | 88.636% | 91.561%] | L: 1.244 | [2.050 | 0.484 | 0.392]
02/09/2020 04:20:28 AM [32/50] | t_0 | R: 0.988 | [0.988 | 0.994 | 0.980] | A: [99.337% | 99.432% | 98.864%] | L: 0.028 | [0.027 | 0.025 | 0.033]
02/09/2020 04:20:30 AM [32/50] | v_0 | R: 0.655 | [0.449 | 0.844 | 0.880] | A: [61.130% | 89.923% | 91.193%] | L: 1.198 | [1.926 | 0.469 | 0.469]
02/09/2020 04:20:50 AM [33/50] | t_0 | R: 0.986 | [0.988 | 0.992 | 0.976] | A: [99.290% | 99.526% | 99.006%] | L: 0.026 | [0.026 | 0.018 | 0.035]
02/09/2020 04:20:52 AM [33/50] | v_0 | R: 0.669 | [0.452 | 0.895 | 0.877] | A: [60.912% | 92.480% | 90.826%] | L: 1.183 | [1.895 | 0.416 | 0.524]
02/09/2020 04:21:13 AM [34/50] | t_0 | R: 0.985 | [0.980 | 0.992 | 0.989] | A: [98.864% | 99.148% | 99.195%] | L: 0.031 | [0.040 | 0.026 | 0.019]
02/09/2020 04:21:15 AM [34/50] | v_0 | R: 0.667 | [0.454 | 0.883 | 0.876] | A: [59.793% | 91.377% | 92.096%] | L: 1.203 | [2.008 | 0.408 | 0.389]
02/09/2020 04:21:36 AM [35/50] | t_0 | R: 0.981 | [0.976 | 0.986 | 0.987] | A: [98.627% | 99.148% | 99.384%] | L: 0.044 | [0.063 | 0.021 | 0.027]
02/09/2020 04:21:37 AM [35/50] | v_0 | R: 0.684 | [0.479 | 0.855 | 0.924] | A: [64.205% | 90.090% | 92.831%] | L: 1.159 | [1.952 | 0.431 | 0.298]
02/09/2020 04:21:58 AM [36/50] | t_0 | R: 0.982 | [0.977 | 0.993 | 0.980] | A: [98.627% | 99.242% | 99.053%] | L: 0.043 | [0.063 | 0.021 | 0.025]
02/09/2020 04:22:00 AM [36/50] | v_0 | R: 0.697 | [0.522 | 0.874 | 0.872] | A: [66.928% | 89.906% | 91.210%] | L: 1.133 | [1.847 | 0.458 | 0.381]
02/09/2020 04:22:21 AM [37/50] | t_0 | R: 0.982 | [0.970 | 0.993 | 0.995] | A: [98.437% | 99.195% | 99.526%] | L: 0.034 | [0.047 | 0.028 | 0.014]
02/09/2020 04:22:22 AM [37/50] | v_0 | R: 0.651 | [0.450 | 0.841 | 0.863] | A: [61.080% | 89.739% | 91.026%] | L: 1.225 | [2.044 | 0.411 | 0.402]
02/09/2020 04:22:43 AM [38/50] | t_0 | R: 0.972 | [0.955 | 0.988 | 0.991] | A: [97.491% | 99.053% | 99.384%] | L: 0.053 | [0.082 | 0.029 | 0.018]
02/09/2020 04:22:45 AM [38/50] | v_0 | R: 0.662 | [0.448 | 0.865 | 0.887] | A: [59.960% | 90.441% | 92.480%] | L: 1.298 | [2.185 | 0.429 | 0.391]
02/09/2020 04:23:06 AM [39/50] | t_0 | R: 0.972 | [0.958 | 0.982 | 0.993] | A: [97.680% | 99.006% | 99.290%] | L: 0.053 | [0.079 | 0.033 | 0.023]
02/09/2020 04:23:07 AM [39/50] | v_0 | R: 0.662 | [0.468 | 0.848 | 0.867] | A: [62.366% | 88.987% | 92.480%] | L: 1.152 | [1.887 | 0.457 | 0.374]
02/09/2020 04:23:28 AM [40/50] | t_0 | R: 0.980 | [0.979 | 0.982 | 0.982] | A: [98.864% | 98.816% | 98.485%] | L: 0.047 | [0.053 | 0.034 | 0.045]
02/09/2020 04:23:30 AM [40/50] | v_0 | R: 0.662 | [0.455 | 0.860 | 0.879] | A: [61.263% | 91.009% | 89.171%] | L: 1.270 | [2.075 | 0.424 | 0.503]
02/09/2020 04:23:51 AM [41/50] | t_0 | R: 0.980 | [0.974 | 0.983 | 0.991] | A: [98.485% | 99.148% | 99.053%] | L: 0.044 | [0.063 | 0.024 | 0.026]
02/09/2020 04:23:52 AM [41/50] | v_0 | R: 0.660 | [0.467 | 0.832 | 0.874] | A: [61.631% | 88.453% | 91.193%] | L: 1.241 | [2.056 | 0.412 | 0.441]
02/09/2020 04:24:13 AM [42/50] | t_0 | R: 0.989 | [0.986 | 0.991 | 0.991] | A: [99.242% | 99.526% | 99.290%] | L: 0.024 | [0.029 | 0.016 | 0.024]
02/09/2020 04:24:15 AM [42/50] | v_0 | R: 0.688 | [0.492 | 0.876 | 0.889] | A: [64.923% | 91.009% | 91.945%] | L: 1.176 | [1.927 | 0.394 | 0.456]
02/09/2020 04:24:36 AM [43/50] | t_0 | R: 0.990 | [0.986 | 0.990 | 0.996] | A: [99.195% | 99.621% | 99.621%] | L: 0.022 | [0.031 | 0.010 | 0.014]
02/09/2020 04:24:37 AM [43/50] | v_0 | R: 0.677 | [0.467 | 0.904 | 0.872] | A: [61.631% | 91.912% | 91.561%] | L: 1.238 | [2.072 | 0.353 | 0.456]
02/09/2020 04:24:58 AM [44/50] | t_0 | R: 0.983 | [0.984 | 0.987 | 0.977] | A: [99.053% | 99.053% | 98.958%] | L: 0.030 | [0.034 | 0.026 | 0.025]
02/09/2020 04:25:00 AM [44/50] | v_0 | R: 0.687 | [0.467 | 0.892 | 0.923] | A: [61.965% | 92.296% | 93.382%] | L: 1.210 | [2.054 | 0.360 | 0.372]
02/09/2020 04:25:21 AM [45/50] | t_0 | R: 0.985 | [0.979 | 0.993 | 0.987] | A: [99.006% | 99.384% | 99.242%] | L: 0.028 | [0.035 | 0.017 | 0.023]
02/09/2020 04:25:23 AM [45/50] | v_0 | R: 0.641 | [0.422 | 0.847 | 0.873] | A: [58.138% | 89.539% | 91.544%] | L: 1.354 | [2.250 | 0.408 | 0.507]
02/09/2020 04:25:43 AM [46/50] | t_0 | R: 0.983 | [0.977 | 0.994 | 0.985] | A: [98.722% | 99.574% | 98.911%] | L: 0.032 | [0.042 | 0.014 | 0.031]
02/09/2020 04:25:45 AM [46/50] | v_0 | R: 0.663 | [0.458 | 0.856 | 0.880] | A: [61.815% | 89.539% | 92.279%] | L: 1.260 | [2.054 | 0.469 | 0.464]
02/09/2020 04:26:06 AM [47/50] | t_0 | R: 0.969 | [0.957 | 0.993 | 0.968] | A: [97.538% | 99.053% | 98.437%] | L: 0.064 | [0.091 | 0.030 | 0.042]
02/09/2020 04:26:08 AM [47/50] | v_0 | R: 0.654 | [0.462 | 0.818 | 0.873] | A: [60.862% | 85.160% | 91.912%] | L: 1.326 | [2.154 | 0.643 | 0.350]
02/09/2020 04:26:29 AM [48/50] | t_0 | R: 0.978 | [0.966 | 0.987 | 0.991] | A: [98.059% | 99.006% | 99.337%] | L: 0.046 | [0.061 | 0.039 | 0.022]
02/09/2020 04:26:30 AM [48/50] | v_0 | R: 0.665 | [0.475 | 0.840 | 0.870] | A: [63.085% | 89.004% | 90.826%] | L: 1.305 | [2.177 | 0.489 | 0.377]
02/09/2020 04:26:51 AM [49/50] | t_0 | R: 0.984 | [0.976 | 0.991 | 0.993] | A: [98.769% | 99.337% | 99.195%] | L: 0.031 | [0.038 | 0.025 | 0.025]
02/09/2020 04:26:53 AM [49/50] | v_0 | R: 0.663 | [0.467 | 0.837 | 0.883] | A: [61.815% | 87.533% | 91.026%] | L: 1.403 | [2.296 | 0.593 | 0.426]
02/09/2020 04:27:14 AM [50/50] | t_0 | R: 0.982 | [0.974 | 0.989 | 0.992] | A: [98.532% | 99.195% | 99.432%] | L: 0.036 | [0.047 | 0.025 | 0.025]
02/09/2020 04:27:15 AM [50/50] | v_0 | R: 0.670 | [0.454 | 0.851 | 0.923] | A: [61.063% | 88.971% | 93.382%] | L: 1.283 | [2.131 | 0.469 | 0.400]
