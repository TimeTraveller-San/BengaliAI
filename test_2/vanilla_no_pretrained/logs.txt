02/09/2020 03:18:25 AM 

---------------- [LOGS for vanilla_no_pretrained] ----------------
02/09/2020 03:19:22 AM Project path: test_2/vanilla_no_pretrained
02/09/2020 03:19:22 AM Model: se_resnext50_32x4d
02/09/2020 03:19:22 AM Model class: <class 'model.ClassifierCNN'>
02/09/2020 03:19:22 AM Debug: False
02/09/2020 03:19:22 AM Batch size: 32
02/09/2020 03:19:22 AM LR: 0.0003
02/09/2020 03:19:22 AM Optimizer: <class 'torch.optim.adam.Adam'>
02/09/2020 03:19:22 AM Weights: [0.5 | 0.25 | 0.25]
02/09/2020 03:19:22 AM Activation: None
02/09/2020 03:19:22 AM Mixup: False
02/09/2020 03:19:22 AM Cutmix: False
02/09/2020 03:19:22 AM Train dataset: <loaddata.BengaliAI object at 0x7fd63dfb6cc0>
02/09/2020 03:19:22 AM Validation dataset: <loaddata.BengaliAI object at 0x7fd63dfb6f28>
02/09/2020 03:19:22 AM Continue: False
02/09/2020 03:19:22 AM Model: ClassifierCNN(
  (first): Conv2d(1, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (model): SENet(
    (layer0): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    )
    (layer1): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer2): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer3): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (4): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (5): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer4): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
    (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (head_grapheme_root): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=168, bias=True)
  )
  (head_vowel_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=11, bias=True)
  )
  (head_consonant_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=7, bias=True)
  )
)
02/09/2020 03:19:22 AM ------------------------------------------------------------
02/09/2020 03:19:22 AM Starting training...
02/09/2020 03:19:40 AM [1/50] | t_0 | R: 0.074 | [0.004 | 0.144 | 0.144] | A: [2.225% | 26.894% | 61.127%] | L: 3.464 | [5.243 | 2.095 | 1.277]
02/09/2020 03:19:41 AM [1/50] | v_0 | R: 0.091 | [0.008 | 0.220 | 0.128] | A: [3.493% | 36.130% | 62.383%] | L: 3.338 | [5.088 | 1.929 | 1.248]
02/09/2020 03:19:58 AM [2/50] | t_0 | R: 0.116 | [0.008 | 0.287 | 0.162] | A: [3.172% | 41.714% | 61.884%] | L: 3.165 | [4.907 | 1.696 | 1.149]
02/09/2020 03:19:59 AM [2/50] | v_0 | R: 0.137 | [0.011 | 0.333 | 0.193] | A: [2.757% | 52.657% | 63.118%] | L: 3.095 | [4.938 | 1.435 | 1.070]
02/09/2020 03:20:16 AM [3/50] | t_0 | R: 0.186 | [0.019 | 0.428 | 0.279] | A: [5.066% | 55.114% | 62.027%] | L: 2.928 | [4.658 | 1.332 | 1.066]
02/09/2020 03:20:18 AM [3/50] | v_0 | R: 0.194 | [0.022 | 0.415 | 0.316] | A: [6.250% | 61.614% | 67.162%] | L: 2.795 | [4.572 | 1.103 | 0.931]
02/09/2020 03:20:35 AM [4/50] | t_0 | R: 0.224 | [0.039 | 0.468 | 0.352] | A: [7.481% | 60.417% | 65.530%] | L: 2.697 | [4.341 | 1.142 | 0.964]
02/09/2020 03:20:36 AM [4/50] | v_0 | R: 0.237 | [0.030 | 0.436 | 0.455] | A: [6.434% | 60.177% | 69.552%] | L: 2.781 | [4.610 | 1.053 | 0.851]
02/09/2020 03:20:53 AM [5/50] | t_0 | R: 0.274 | [0.063 | 0.522 | 0.447] | A: [11.742% | 65.199% | 67.140%] | L: 2.475 | [3.998 | 1.002 | 0.902]
02/09/2020 03:20:54 AM [5/50] | v_0 | R: 0.288 | [0.058 | 0.561 | 0.476] | A: [10.294% | 70.438% | 70.104%] | L: 2.553 | [4.318 | 0.783 | 0.792]
02/09/2020 03:21:11 AM [6/50] | t_0 | R: 0.325 | [0.095 | 0.561 | 0.548] | A: [16.667% | 67.661% | 71.449%] | L: 2.237 | [3.615 | 0.912 | 0.806]
02/09/2020 03:21:12 AM [6/50] | v_0 | R: 0.333 | [0.073 | 0.627 | 0.560] | A: [15.207% | 71.156% | 70.789%] | L: 2.428 | [4.031 | 0.804 | 0.846]
02/09/2020 03:21:29 AM [7/50] | t_0 | R: 0.369 | [0.137 | 0.608 | 0.596] | A: [22.727% | 70.455% | 72.869%] | L: 2.019 | [3.250 | 0.834 | 0.740]
02/09/2020 03:21:31 AM [7/50] | v_0 | R: 0.361 | [0.087 | 0.631 | 0.641] | A: [15.943% | 73.730% | 78.526%] | L: 2.331 | [3.943 | 0.760 | 0.676]
02/09/2020 03:21:48 AM [8/50] | t_0 | R: 0.413 | [0.196 | 0.622 | 0.640] | A: [30.492% | 72.159% | 77.509%] | L: 1.750 | [2.801 | 0.760 | 0.639]
02/09/2020 03:21:49 AM [8/50] | v_0 | R: 0.349 | [0.059 | 0.581 | 0.694] | A: [10.996% | 66.594% | 79.813%] | L: 2.807 | [4.828 | 0.912 | 0.659]
02/09/2020 03:22:06 AM [9/50] | t_0 | R: 0.486 | [0.280 | 0.669 | 0.715] | A: [41.004% | 76.136% | 80.256%] | L: 1.477 | [2.335 | 0.671 | 0.568]
02/09/2020 03:22:07 AM [9/50] | v_0 | R: 0.379 | [0.098 | 0.649 | 0.673] | A: [17.263% | 75.585% | 77.590%] | L: 2.354 | [4.013 | 0.734 | 0.657]
02/09/2020 03:22:24 AM [10/50] | t_0 | R: 0.531 | [0.351 | 0.712 | 0.711] | A: [49.006% | 78.788% | 80.871%] | L: 1.260 | [1.951 | 0.617 | 0.522]
02/09/2020 03:22:26 AM [10/50] | v_0 | R: 0.398 | [0.101 | 0.655 | 0.734] | A: [17.597% | 73.730% | 80.732%] | L: 2.604 | [4.524 | 0.766 | 0.601]
02/09/2020 03:22:43 AM [11/50] | t_0 | R: 0.591 | [0.430 | 0.737 | 0.764] | A: [56.581% | 80.682% | 83.144%] | L: 1.066 | [1.618 | 0.543 | 0.486]
02/09/2020 03:22:44 AM [11/50] | v_0 | R: 0.415 | [0.145 | 0.652 | 0.719] | A: [24.766% | 72.443% | 81.668%] | L: 2.142 | [3.654 | 0.714 | 0.548]
02/09/2020 03:23:01 AM [12/50] | t_0 | R: 0.637 | [0.490 | 0.766 | 0.801] | A: [62.926% | 82.386% | 85.133%] | L: 0.913 | [1.359 | 0.514 | 0.417]
02/09/2020 03:23:02 AM [12/50] | v_0 | R: 0.427 | [0.194 | 0.656 | 0.666] | A: [30.999% | 69.151% | 75.401%] | L: 2.234 | [3.612 | 1.027 | 0.687]
02/09/2020 03:23:19 AM [13/50] | t_0 | R: 0.674 | [0.557 | 0.791 | 0.790] | A: [68.561% | 84.612% | 84.564%] | L: 0.791 | [1.162 | 0.433 | 0.406]
02/09/2020 03:23:21 AM [13/50] | v_0 | R: 0.429 | [0.198 | 0.623 | 0.696] | A: [31.751% | 66.009% | 79.997%] | L: 2.242 | [3.659 | 1.027 | 0.623]
02/09/2020 03:23:38 AM [14/50] | t_0 | R: 0.731 | [0.636 | 0.812 | 0.840] | A: [75.663% | 85.748% | 88.210%] | L: 0.648 | [0.918 | 0.422 | 0.336]
02/09/2020 03:23:39 AM [14/50] | v_0 | R: 0.447 | [0.171 | 0.725 | 0.722] | A: [27.557% | 78.693% | 83.272%] | L: 2.278 | [3.983 | 0.642 | 0.504]
02/09/2020 03:23:56 AM [15/50] | t_0 | R: 0.746 | [0.668 | 0.818 | 0.828] | A: [78.078% | 86.837% | 88.210%] | L: 0.574 | [0.783 | 0.386 | 0.342]
02/09/2020 03:23:57 AM [15/50] | v_0 | R: 0.453 | [0.202 | 0.708 | 0.700] | A: [31.166% | 80.531% | 81.467%] | L: 2.219 | [3.867 | 0.562 | 0.581]
02/09/2020 03:24:14 AM [16/50] | t_0 | R: 0.795 | [0.736 | 0.868 | 0.841] | A: [83.191% | 89.205% | 88.920%] | L: 0.488 | [0.667 | 0.321 | 0.297]
02/09/2020 03:24:15 AM [16/50] | v_0 | R: 0.474 | [0.222 | 0.733 | 0.719] | A: [34.509% | 74.281% | 83.122%] | L: 1.995 | [3.354 | 0.737 | 0.535]
02/09/2020 03:24:32 AM [17/50] | t_0 | R: 0.807 | [0.741 | 0.875 | 0.872] | A: [83.239% | 90.388% | 91.619%] | L: 0.438 | [0.607 | 0.290 | 0.248]
02/09/2020 03:24:34 AM [17/50] | v_0 | R: 0.465 | [0.238 | 0.702 | 0.682] | A: [37.951% | 78.158% | 79.495%] | L: 1.874 | [3.132 | 0.660 | 0.573]
02/09/2020 03:24:51 AM [18/50] | t_0 | R: 0.832 | [0.777 | 0.877 | 0.898] | A: [86.222% | 91.146% | 92.045%] | L: 0.375 | [0.503 | 0.261 | 0.232]
02/09/2020 03:24:52 AM [18/50] | v_0 | R: 0.525 | [0.277 | 0.772 | 0.774] | A: [41.628% | 80.348% | 87.149%] | L: 1.718 | [2.900 | 0.604 | 0.467]
02/09/2020 03:25:09 AM [19/50] | t_0 | R: 0.846 | [0.806 | 0.880 | 0.894] | A: [87.926% | 91.714% | 93.750%] | L: 0.318 | [0.421 | 0.244 | 0.186]
02/09/2020 03:25:10 AM [19/50] | v_0 | R: 0.520 | [0.281 | 0.753 | 0.765] | A: [41.477% | 80.732% | 84.626%] | L: 1.830 | [3.120 | 0.597 | 0.486]
02/09/2020 03:25:27 AM [20/50] | t_0 | R: 0.882 | [0.848 | 0.928 | 0.904] | A: [90.672% | 94.081% | 94.271%] | L: 0.259 | [0.348 | 0.179 | 0.162]
02/09/2020 03:25:29 AM [20/50] | v_0 | R: 0.479 | [0.237 | 0.715 | 0.726] | A: [36.330% | 76.320% | 85.495%] | L: 1.983 | [3.359 | 0.727 | 0.486]
02/09/2020 03:25:46 AM [21/50] | t_0 | R: 0.885 | [0.849 | 0.910 | 0.933] | A: [90.956% | 93.561% | 95.691%] | L: 0.241 | [0.310 | 0.201 | 0.144]
02/09/2020 03:25:47 AM [21/50] | v_0 | R: 0.532 | [0.297 | 0.697 | 0.835] | A: [43.082% | 75.418% | 88.820%] | L: 1.760 | [2.939 | 0.778 | 0.385]
02/09/2020 03:26:04 AM [22/50] | t_0 | R: 0.891 | [0.847 | 0.929 | 0.943] | A: [91.098% | 94.886% | 95.455%] | L: 0.232 | [0.320 | 0.159 | 0.130]
02/09/2020 03:26:05 AM [22/50] | v_0 | R: 0.498 | [0.280 | 0.730 | 0.700] | A: [41.979% | 79.445% | 84.225%] | L: 1.758 | [2.923 | 0.636 | 0.551]
02/09/2020 03:26:22 AM [23/50] | t_0 | R: 0.907 | [0.890 | 0.919 | 0.929] | A: [93.892% | 94.271% | 95.975%] | L: 0.188 | [0.230 | 0.163 | 0.130]
02/09/2020 03:26:24 AM [23/50] | v_0 | R: 0.559 | [0.334 | 0.767 | 0.802] | A: [47.510% | 81.083% | 86.247%] | L: 1.729 | [2.906 | 0.608 | 0.496]
02/09/2020 03:26:41 AM [24/50] | t_0 | R: 0.932 | [0.910 | 0.954 | 0.955] | A: [94.792% | 96.307% | 96.496%] | L: 0.164 | [0.208 | 0.127 | 0.113]
02/09/2020 03:26:42 AM [24/50] | v_0 | R: 0.527 | [0.294 | 0.775 | 0.746] | A: [42.162% | 81.651% | 82.403%] | L: 1.865 | [3.173 | 0.561 | 0.553]
02/09/2020 03:26:59 AM [25/50] | t_0 | R: 0.920 | [0.888 | 0.955 | 0.950] | A: [93.466% | 96.496% | 96.780%] | L: 0.165 | [0.225 | 0.114 | 0.094]
02/09/2020 03:27:00 AM [25/50] | v_0 | R: 0.567 | [0.333 | 0.809 | 0.792] | A: [48.212% | 86.029% | 88.436%] | L: 1.606 | [2.770 | 0.434 | 0.450]
02/09/2020 03:27:17 AM [26/50] | t_0 | R: 0.938 | [0.926 | 0.948 | 0.952] | A: [95.975% | 95.975% | 97.254%] | L: 0.139 | [0.170 | 0.122 | 0.093]
02/09/2020 03:27:19 AM [26/50] | v_0 | R: 0.532 | [0.262 | 0.772 | 0.833] | A: [38.336% | 81.852% | 90.458%] | L: 1.929 | [3.366 | 0.589 | 0.394]
02/09/2020 03:27:36 AM [27/50] | t_0 | R: 0.941 | [0.932 | 0.947 | 0.953] | A: [95.833% | 95.928% | 96.686%] | L: 0.138 | [0.166 | 0.121 | 0.099]
02/09/2020 03:27:37 AM [27/50] | v_0 | R: 0.512 | [0.263 | 0.735 | 0.787] | A: [40.140% | 78.326% | 87.717%] | L: 1.985 | [3.341 | 0.788 | 0.470]
02/09/2020 03:27:54 AM [28/50] | t_0 | R: 0.929 | [0.915 | 0.947 | 0.939] | A: [95.218% | 96.354% | 96.212%] | L: 0.133 | [0.159 | 0.110 | 0.105]
02/09/2020 03:27:55 AM [28/50] | v_0 | R: 0.490 | [0.211 | 0.755 | 0.783] | A: [32.470% | 80.331% | 86.430%] | L: 2.325 | [4.043 | 0.682 | 0.531]
02/09/2020 03:28:12 AM [29/50] | t_0 | R: 0.934 | [0.910 | 0.953 | 0.961] | A: [94.650% | 96.638% | 97.206%] | L: 0.131 | [0.164 | 0.104 | 0.090]
02/09/2020 03:28:14 AM [29/50] | v_0 | R: 0.560 | [0.305 | 0.800 | 0.831] | A: [42.363% | 84.191% | 88.085%] | L: 2.071 | [3.586 | 0.571 | 0.542]
02/09/2020 03:28:31 AM [30/50] | t_0 | R: 0.941 | [0.929 | 0.960 | 0.947] | A: [95.833% | 96.828% | 96.259%] | L: 0.126 | [0.157 | 0.096 | 0.093]
02/09/2020 03:28:32 AM [30/50] | v_0 | R: 0.558 | [0.331 | 0.795 | 0.776] | A: [47.293% | 84.208% | 87.333%] | L: 1.750 | [2.992 | 0.536 | 0.478]
02/09/2020 03:28:49 AM [31/50] | t_0 | R: 0.952 | [0.936 | 0.975 | 0.959] | A: [96.449% | 97.822% | 97.064%] | L: 0.110 | [0.140 | 0.071 | 0.090]
02/09/2020 03:28:50 AM [31/50] | v_0 | R: 0.572 | [0.327 | 0.804 | 0.832] | A: [46.574% | 87.316% | 89.171%] | L: 1.727 | [2.984 | 0.470 | 0.469]
02/09/2020 03:29:07 AM [32/50] | t_0 | R: 0.951 | [0.941 | 0.957 | 0.966] | A: [96.686% | 96.922% | 97.112%] | L: 0.103 | [0.123 | 0.091 | 0.075]
02/09/2020 03:29:09 AM [32/50] | v_0 | R: 0.556 | [0.319 | 0.802 | 0.786] | A: [45.471% | 85.127% | 88.252%] | L: 1.765 | [2.996 | 0.589 | 0.477]
02/09/2020 03:29:26 AM [33/50] | t_0 | R: 0.951 | [0.930 | 0.974 | 0.969] | A: [96.070% | 98.153% | 98.059%] | L: 0.095 | [0.132 | 0.060 | 0.057]
02/09/2020 03:29:27 AM [33/50] | v_0 | R: 0.539 | [0.278 | 0.798 | 0.803] | A: [40.541% | 85.678% | 88.436%] | L: 2.052 | [3.603 | 0.512 | 0.487]
02/09/2020 03:29:44 AM [34/50] | t_0 | R: 0.947 | [0.929 | 0.960 | 0.971] | A: [95.975% | 96.922% | 97.869%] | L: 0.113 | [0.150 | 0.091 | 0.063]
02/09/2020 03:29:45 AM [34/50] | v_0 | R: 0.540 | [0.297 | 0.770 | 0.794] | A: [43.282% | 81.618% | 87.701%] | L: 1.987 | [3.324 | 0.725 | 0.573]
02/09/2020 03:30:02 AM [35/50] | t_0 | R: 0.941 | [0.919 | 0.968 | 0.960] | A: [95.407% | 98.059% | 97.822%] | L: 0.115 | [0.168 | 0.060 | 0.063]
02/09/2020 03:30:04 AM [35/50] | v_0 | R: 0.568 | [0.333 | 0.812 | 0.793] | A: [48.062% | 87.701% | 88.436%] | L: 1.711 | [2.912 | 0.470 | 0.551]
02/09/2020 03:30:21 AM [36/50] | t_0 | R: 0.950 | [0.935 | 0.962 | 0.970] | A: [96.212% | 97.064% | 97.964%] | L: 0.101 | [0.131 | 0.085 | 0.060]
02/09/2020 03:30:22 AM [36/50] | v_0 | R: 0.554 | [0.354 | 0.806 | 0.701] | A: [49.682% | 85.144% | 86.046%] | L: 1.732 | [2.870 | 0.537 | 0.649]
02/09/2020 03:30:39 AM [37/50] | t_0 | R: 0.949 | [0.931 | 0.970 | 0.965] | A: [96.212% | 97.869% | 97.585%] | L: 0.099 | [0.126 | 0.073 | 0.072]
02/09/2020 03:30:40 AM [37/50] | v_0 | R: 0.567 | [0.338 | 0.792 | 0.800] | A: [46.557% | 85.328% | 88.252%] | L: 1.877 | [3.212 | 0.523 | 0.561]
02/09/2020 03:30:57 AM [38/50] | t_0 | R: 0.951 | [0.937 | 0.961 | 0.970] | A: [96.449% | 97.254% | 98.343%] | L: 0.094 | [0.120 | 0.084 | 0.051]
02/09/2020 03:30:59 AM [38/50] | v_0 | R: 0.563 | [0.340 | 0.798 | 0.774] | A: [47.477% | 85.678% | 89.171%] | L: 1.812 | [3.104 | 0.557 | 0.485]
02/09/2020 03:31:15 AM [39/50] | t_0 | R: 0.960 | [0.953 | 0.975 | 0.961] | A: [97.301% | 97.680% | 98.011%] | L: 0.077 | [0.091 | 0.074 | 0.053]
02/09/2020 03:31:17 AM [39/50] | v_0 | R: 0.571 | [0.352 | 0.811 | 0.768] | A: [50.434% | 85.862% | 87.350%] | L: 1.654 | [2.765 | 0.540 | 0.547]
02/09/2020 03:31:34 AM [40/50] | t_0 | R: 0.963 | [0.955 | 0.977 | 0.964] | A: [97.348% | 98.201% | 97.917%] | L: 0.081 | [0.102 | 0.055 | 0.064]
02/09/2020 03:31:35 AM [40/50] | v_0 | R: 0.598 | [0.375 | 0.840 | 0.802] | A: [50.953% | 88.603% | 89.171%] | L: 1.681 | [2.899 | 0.439 | 0.486]
02/09/2020 03:31:52 AM [41/50] | t_0 | R: 0.961 | [0.949 | 0.974 | 0.970] | A: [97.017% | 97.775% | 98.343%] | L: 0.078 | [0.097 | 0.064 | 0.054]
02/09/2020 03:31:53 AM [41/50] | v_0 | R: 0.575 | [0.323 | 0.820 | 0.833] | A: [45.672% | 85.511% | 89.188%] | L: 1.868 | [3.191 | 0.533 | 0.555]
02/09/2020 03:32:10 AM [42/50] | t_0 | R: 0.952 | [0.932 | 0.978 | 0.967] | A: [96.165% | 98.248% | 98.201%] | L: 0.086 | [0.115 | 0.056 | 0.058]
02/09/2020 03:32:11 AM [42/50] | v_0 | R: 0.585 | [0.344 | 0.836 | 0.817] | A: [48.596% | 85.294% | 88.803%] | L: 1.736 | [2.964 | 0.564 | 0.452]
02/09/2020 03:32:28 AM [43/50] | t_0 | R: 0.968 | [0.952 | 0.990 | 0.977] | A: [97.348% | 98.769% | 98.816%] | L: 0.069 | [0.095 | 0.046 | 0.039]
02/09/2020 03:32:29 AM [43/50] | v_0 | R: 0.578 | [0.325 | 0.836 | 0.828] | A: [47.510% | 86.598% | 88.436%] | L: 1.887 | [3.206 | 0.532 | 0.605]
02/09/2020 03:32:46 AM [44/50] | t_0 | R: 0.962 | [0.945 | 0.987 | 0.971] | A: [96.828% | 99.100% | 98.532%] | L: 0.083 | [0.126 | 0.034 | 0.045]
02/09/2020 03:32:48 AM [44/50] | v_0 | R: 0.573 | [0.363 | 0.823 | 0.745] | A: [50.251% | 86.598% | 82.587%] | L: 1.941 | [3.222 | 0.553 | 0.765]
02/09/2020 03:33:04 AM [45/50] | t_0 | R: 0.969 | [0.966 | 0.984 | 0.961] | A: [97.964% | 98.627% | 98.106%] | L: 0.067 | [0.080 | 0.049 | 0.058]
02/09/2020 03:33:06 AM [45/50] | v_0 | R: 0.545 | [0.316 | 0.787 | 0.760] | A: [46.641% | 84.392% | 84.759%] | L: 2.047 | [3.446 | 0.659 | 0.639]
02/09/2020 03:33:23 AM [46/50] | t_0 | R: 0.966 | [0.949 | 0.989 | 0.979] | A: [97.017% | 99.053% | 98.911%] | L: 0.069 | [0.104 | 0.032 | 0.035]
02/09/2020 03:33:24 AM [46/50] | v_0 | R: 0.533 | [0.296 | 0.748 | 0.793] | A: [43.299% | 81.467% | 86.414%] | L: 2.090 | [3.496 | 0.696 | 0.671]
02/09/2020 03:33:41 AM [47/50] | t_0 | R: 0.959 | [0.939 | 0.978 | 0.980] | A: [96.733% | 98.437% | 98.579%] | L: 0.076 | [0.102 | 0.055 | 0.045]
02/09/2020 03:33:42 AM [47/50] | v_0 | R: 0.564 | [0.338 | 0.753 | 0.826] | A: [48.262% | 84.576% | 88.803%] | L: 1.770 | [3.001 | 0.578 | 0.501]
02/09/2020 03:33:59 AM [48/50] | t_0 | R: 0.951 | [0.931 | 0.965 | 0.975] | A: [96.117% | 98.011% | 98.627%] | L: 0.092 | [0.130 | 0.068 | 0.042]
02/09/2020 03:34:00 AM [48/50] | v_0 | R: 0.575 | [0.331 | 0.795 | 0.843] | A: [46.758% | 84.592% | 88.803%] | L: 1.889 | [3.215 | 0.593 | 0.531]
02/09/2020 03:34:17 AM [49/50] | t_0 | R: 0.945 | [0.925 | 0.967 | 0.963] | A: [95.644% | 97.538% | 98.106%] | L: 0.106 | [0.146 | 0.071 | 0.059]
02/09/2020 03:34:19 AM [49/50] | v_0 | R: 0.563 | [0.326 | 0.768 | 0.831] | A: [45.488% | 82.386% | 83.489%] | L: 2.042 | [3.245 | 0.689 | 0.990]
02/09/2020 03:34:35 AM [50/50] | t_0 | R: 0.941 | [0.921 | 0.958 | 0.963] | A: [95.549% | 97.348% | 97.633%] | L: 0.108 | [0.151 | 0.067 | 0.065]
02/09/2020 03:34:37 AM [50/50] | v_0 | R: 0.560 | [0.308 | 0.817 | 0.808] | A: [44.051% | 86.063% | 86.965%] | L: 1.978 | [3.334 | 0.539 | 0.706]
