02/09/2020 05:22:40 PM 

---------------- [LOGS for vanilla_head3_mish] ----------------
02/09/2020 05:24:11 PM 

---------------- [LOGS for vanilla_head3_mish] ----------------
02/09/2020 05:24:31 PM 

---------------- [LOGS for vanilla_head3_mish] ----------------
02/09/2020 05:25:19 PM Freezing model
02/09/2020 05:25:19 PM Project path: test_2/vanilla_head3_mish
02/09/2020 05:25:19 PM Model: se_resnext50_32x4d
02/09/2020 05:25:19 PM Model class: <class 'model.ClassifierCNN'>
02/09/2020 05:25:19 PM Debug: False
02/09/2020 05:25:19 PM Batch size: 32
02/09/2020 05:25:19 PM LR: 0.0003
02/09/2020 05:25:19 PM Optimizer: <class 'torch.optim.adam.Adam'>
02/09/2020 05:25:19 PM Weights: [0.5 | 0.25 | 0.25]
02/09/2020 05:25:19 PM Activation: mish
02/09/2020 05:25:19 PM Mixup: False
02/09/2020 05:25:19 PM Cutmix: False
02/09/2020 05:25:19 PM Train dataset: <loaddata.BengaliAI object at 0x7f3e28438c18>
02/09/2020 05:25:19 PM Validation dataset: <loaddata.BengaliAI object at 0x7f3e28438e48>
02/09/2020 05:25:19 PM Continue: False
02/09/2020 05:25:19 PM Model: ClassifierCNN(
  (first): RGB()
  (model): SENet(
    (layer0): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): Mish()
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    )
    (layer1): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer2): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer3): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (4): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (5): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer4): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): Mish()
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): Mish()
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
    (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (head_grapheme_root): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (fc1): Conv2d(2048, 1024, kernel_size=(2, 2), stride=(1, 1))
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (mish): Mish()
    (l1): Linear(in_features=1024, out_features=168, bias=True)
  )
  (head_vowel_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (fc1): Conv2d(2048, 1024, kernel_size=(2, 2), stride=(1, 1))
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (mish): Mish()
    (l1): Linear(in_features=1024, out_features=11, bias=True)
  )
  (head_consonant_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (fc1): Conv2d(2048, 1024, kernel_size=(2, 2), stride=(1, 1))
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (mish): Mish()
    (l1): Linear(in_features=1024, out_features=7, bias=True)
  )
)
02/09/2020 05:25:19 PM ------------------------------------------------------------
02/09/2020 05:25:19 PM Starting training...
02/09/2020 05:25:19 PM Unfreezing model
02/09/2020 05:25:44 PM [1/50] | t_0 | R: 0.233 | [0.023 | 0.424 | 0.462] | A: [5.729% | 53.220% | 64.631%] | L: 2.927 | [4.625 | 1.406 | 1.054]
02/09/2020 05:25:45 PM [1/50] | v_0 | R: 0.344 | [0.066 | 0.537 | 0.708] | A: [15.074% | 70.087% | 82.035%] | L: 2.282 | [3.912 | 0.818 | 0.488]
02/09/2020 05:26:08 PM [2/50] | t_0 | R: 0.443 | [0.171 | 0.690 | 0.742] | A: [28.456% | 77.888% | 83.286%] | L: 1.901 | [3.228 | 0.668 | 0.479]
02/09/2020 05:26:10 PM [2/50] | v_0 | R: 0.485 | [0.190 | 0.735 | 0.826] | A: [31.534% | 82.386% | 88.252%] | L: 1.663 | [2.890 | 0.535 | 0.334]
02/09/2020 05:26:33 PM [3/50] | t_0 | R: 0.633 | [0.409 | 0.862 | 0.853] | A: [56.960% | 88.636% | 91.193%] | L: 1.094 | [1.868 | 0.375 | 0.266]
02/09/2020 05:26:35 PM [3/50] | v_0 | R: 0.573 | [0.325 | 0.776 | 0.866] | A: [47.694% | 85.144% | 90.826%] | L: 1.305 | [2.221 | 0.471 | 0.308]
02/09/2020 05:26:58 PM [4/50] | t_0 | R: 0.764 | [0.633 | 0.882 | 0.908] | A: [76.136% | 91.383% | 93.750%] | L: 0.643 | [1.059 | 0.260 | 0.193]
02/09/2020 05:27:00 PM [4/50] | v_0 | R: 0.596 | [0.363 | 0.803 | 0.855] | A: [51.554% | 84.576% | 89.355%] | L: 1.208 | [2.039 | 0.433 | 0.320]
02/09/2020 05:27:22 PM [5/50] | t_0 | R: 0.888 | [0.837 | 0.945 | 0.932] | A: [90.388% | 95.739% | 95.881%] | L: 0.323 | [0.513 | 0.153 | 0.112]
02/09/2020 05:27:24 PM [5/50] | v_0 | R: 0.611 | [0.397 | 0.804 | 0.849] | A: [54.846% | 86.063% | 89.171%] | L: 1.122 | [1.843 | 0.430 | 0.371]
02/09/2020 05:27:47 PM [6/50] | t_0 | R: 0.928 | [0.907 | 0.948 | 0.952] | A: [95.123% | 95.975% | 96.686%] | L: 0.205 | [0.297 | 0.121 | 0.105]
02/09/2020 05:27:49 PM [6/50] | v_0 | R: 0.610 | [0.407 | 0.812 | 0.812] | A: [57.570% | 83.874% | 89.188%] | L: 1.126 | [1.766 | 0.571 | 0.400]
02/09/2020 05:28:12 PM [7/50] | t_0 | R: 0.950 | [0.948 | 0.968 | 0.935] | A: [97.254% | 97.443% | 96.307%] | L: 0.139 | [0.185 | 0.081 | 0.103]
02/09/2020 05:28:14 PM [7/50] | v_0 | R: 0.654 | [0.458 | 0.798 | 0.903] | A: [60.528% | 85.144% | 91.561%] | L: 1.003 | [1.628 | 0.449 | 0.310]
02/09/2020 05:28:37 PM [8/50] | t_0 | R: 0.959 | [0.952 | 0.973 | 0.958] | A: [97.254% | 97.869% | 97.396%] | L: 0.113 | [0.155 | 0.073 | 0.069]
02/09/2020 05:28:38 PM [8/50] | v_0 | R: 0.629 | [0.423 | 0.805 | 0.866] | A: [58.539% | 88.636% | 91.009%] | L: 1.047 | [1.724 | 0.399 | 0.342]
02/09/2020 05:29:01 PM [9/50] | t_0 | R: 0.960 | [0.962 | 0.958 | 0.960] | A: [97.680% | 97.254% | 97.869%] | L: 0.106 | [0.135 | 0.088 | 0.066]
02/09/2020 05:29:03 PM [9/50] | v_0 | R: 0.642 | [0.416 | 0.868 | 0.869] | A: [57.971% | 88.803% | 90.642%] | L: 1.017 | [1.647 | 0.375 | 0.401]
02/09/2020 05:29:26 PM [10/50] | t_0 | R: 0.955 | [0.938 | 0.975 | 0.967] | A: [96.307% | 97.964% | 98.201%] | L: 0.107 | [0.151 | 0.070 | 0.056]
02/09/2020 05:29:28 PM [10/50] | v_0 | R: 0.631 | [0.431 | 0.791 | 0.871] | A: [59.425% | 86.598% | 91.193%] | L: 1.127 | [1.825 | 0.457 | 0.402]
02/09/2020 05:29:51 PM [11/50] | t_0 | R: 0.964 | [0.952 | 0.976 | 0.976] | A: [97.254% | 97.727% | 98.485%] | L: 0.102 | [0.140 | 0.081 | 0.049]
02/09/2020 05:29:53 PM [11/50] | v_0 | R: 0.634 | [0.434 | 0.812 | 0.854] | A: [60.160% | 88.252% | 89.723%] | L: 1.040 | [1.635 | 0.464 | 0.425]
02/09/2020 05:30:16 PM [12/50] | t_0 | R: 0.975 | [0.971 | 0.982 | 0.975] | A: [98.343% | 98.295% | 98.437%] | L: 0.069 | [0.087 | 0.057 | 0.045]
02/09/2020 05:30:17 PM [12/50] | v_0 | R: 0.645 | [0.421 | 0.870 | 0.869] | A: [58.506% | 91.912% | 90.642%] | L: 1.067 | [1.758 | 0.335 | 0.417]
02/09/2020 05:30:40 PM [13/50] | t_0 | R: 0.981 | [0.978 | 0.990 | 0.978] | A: [98.722% | 99.242% | 98.343%] | L: 0.054 | [0.072 | 0.032 | 0.042]
02/09/2020 05:30:42 PM [13/50] | v_0 | R: 0.657 | [0.438 | 0.860 | 0.890] | A: [59.960% | 91.561% | 91.561%] | L: 1.014 | [1.668 | 0.331 | 0.390]
02/09/2020 05:31:05 PM [14/50] | t_0 | R: 0.985 | [0.986 | 0.984 | 0.987] | A: [99.148% | 98.864% | 99.337%] | L: 0.041 | [0.050 | 0.040 | 0.024]
02/09/2020 05:31:07 PM [14/50] | v_0 | R: 0.657 | [0.471 | 0.830 | 0.856] | A: [62.400% | 89.723% | 90.826%] | L: 0.994 | [1.597 | 0.395 | 0.388]
02/09/2020 05:31:30 PM [15/50] | t_0 | R: 0.984 | [0.987 | 0.977 | 0.985] | A: [99.384% | 98.674% | 99.006%] | L: 0.037 | [0.039 | 0.043 | 0.026]
02/09/2020 05:31:31 PM [15/50] | v_0 | R: 0.677 | [0.484 | 0.870 | 0.870] | A: [62.918% | 90.642% | 91.009%] | L: 0.980 | [1.586 | 0.366 | 0.384]
02/09/2020 05:31:54 PM [16/50] | t_0 | R: 0.986 | [0.983 | 0.994 | 0.984] | A: [99.148% | 99.242% | 99.053%] | L: 0.036 | [0.041 | 0.032 | 0.030]
02/09/2020 05:31:56 PM [16/50] | v_0 | R: 0.645 | [0.455 | 0.836 | 0.834] | A: [61.648% | 89.171% | 89.004%] | L: 1.054 | [1.696 | 0.437 | 0.385]
02/09/2020 05:32:19 PM [17/50] | t_0 | R: 0.983 | [0.981 | 0.991 | 0.979] | A: [98.911% | 99.290% | 98.722%] | L: 0.044 | [0.049 | 0.029 | 0.049]
02/09/2020 05:32:21 PM [17/50] | v_0 | R: 0.640 | [0.453 | 0.835 | 0.817] | A: [60.729% | 89.539% | 88.436%] | L: 1.113 | [1.766 | 0.384 | 0.536]
02/09/2020 05:32:44 PM [18/50] | t_0 | R: 0.973 | [0.962 | 0.991 | 0.977] | A: [97.869% | 99.100% | 98.627%] | L: 0.068 | [0.096 | 0.033 | 0.046]
02/09/2020 05:32:46 PM [18/50] | v_0 | R: 0.621 | [0.411 | 0.847 | 0.816] | A: [56.317% | 89.723% | 90.642%] | L: 1.225 | [2.042 | 0.444 | 0.371]
02/09/2020 05:33:09 PM [19/50] | t_0 | R: 0.957 | [0.941 | 0.982 | 0.965] | A: [96.828% | 99.006% | 98.532%] | L: 0.083 | [0.122 | 0.039 | 0.052]
02/09/2020 05:33:10 PM [19/50] | v_0 | R: 0.651 | [0.452 | 0.839 | 0.859] | A: [61.080% | 89.355% | 88.803%] | L: 1.170 | [1.881 | 0.407 | 0.510]
02/09/2020 05:33:33 PM [20/50] | t_0 | R: 0.967 | [0.958 | 0.985 | 0.966] | A: [97.822% | 98.864% | 98.627%] | L: 0.068 | [0.095 | 0.035 | 0.046]
02/09/2020 05:33:35 PM [20/50] | v_0 | R: 0.663 | [0.465 | 0.875 | 0.849] | A: [62.918% | 90.441% | 91.009%] | L: 1.046 | [1.710 | 0.422 | 0.343]
02/09/2020 05:33:58 PM [21/50] | t_0 | R: 0.980 | [0.976 | 0.986 | 0.979] | A: [98.816% | 99.290% | 99.053%] | L: 0.048 | [0.071 | 0.025 | 0.026]
02/09/2020 05:34:00 PM [21/50] | v_0 | R: 0.659 | [0.447 | 0.860 | 0.883] | A: [60.177% | 90.809% | 92.112%] | L: 0.984 | [1.635 | 0.365 | 0.302]
02/09/2020 05:34:23 PM [22/50] | t_0 | R: 0.975 | [0.959 | 0.995 | 0.987] | A: [97.822% | 99.432% | 99.242%] | L: 0.055 | [0.085 | 0.025 | 0.024]
02/09/2020 05:34:25 PM [22/50] | v_0 | R: 0.664 | [0.466 | 0.836 | 0.886] | A: [61.999% | 89.906% | 92.848%] | L: 1.050 | [1.757 | 0.357 | 0.329]
02/09/2020 05:34:48 PM [23/50] | t_0 | R: 0.974 | [0.968 | 0.982 | 0.979] | A: [98.390% | 98.722% | 98.722%] | L: 0.058 | [0.079 | 0.039 | 0.037]
02/09/2020 05:34:49 PM [23/50] | v_0 | R: 0.669 | [0.484 | 0.857 | 0.848] | A: [64.940% | 90.257% | 90.658%] | L: 0.994 | [1.588 | 0.390 | 0.407]
02/09/2020 05:35:12 PM [24/50] | t_0 | R: 0.973 | [0.962 | 0.981 | 0.986] | A: [97.869% | 98.532% | 98.722%] | L: 0.063 | [0.085 | 0.047 | 0.037]
02/09/2020 05:35:14 PM [24/50] | v_0 | R: 0.655 | [0.480 | 0.827 | 0.832] | A: [63.854% | 88.252% | 90.658%] | L: 1.003 | [1.585 | 0.433 | 0.408]
02/09/2020 05:35:37 PM [25/50] | t_0 | R: 0.973 | [0.972 | 0.973 | 0.973] | A: [98.437% | 98.201% | 98.579%] | L: 0.058 | [0.066 | 0.050 | 0.049]
02/09/2020 05:35:38 PM [25/50] | v_0 | R: 0.683 | [0.487 | 0.848 | 0.908] | A: [64.589% | 90.274% | 91.377%] | L: 0.966 | [1.542 | 0.405 | 0.375]
02/09/2020 05:36:01 PM [26/50] | t_0 | R: 0.985 | [0.983 | 0.986 | 0.989] | A: [98.911% | 99.432% | 99.432%] | L: 0.035 | [0.046 | 0.025 | 0.024]
02/09/2020 05:36:03 PM [26/50] | v_0 | R: 0.668 | [0.471 | 0.839 | 0.890] | A: [63.102% | 89.739% | 92.096%] | L: 1.010 | [1.662 | 0.379 | 0.336]
02/09/2020 05:36:26 PM [27/50] | t_0 | R: 0.979 | [0.971 | 0.984 | 0.991] | A: [98.390% | 99.053% | 99.621%] | L: 0.036 | [0.053 | 0.026 | 0.013]
02/09/2020 05:36:28 PM [27/50] | v_0 | R: 0.650 | [0.440 | 0.822 | 0.896] | A: [59.258% | 89.539% | 91.377%] | L: 1.207 | [1.984 | 0.396 | 0.461]
02/09/2020 05:36:50 PM [28/50] | t_0 | R: 0.982 | [0.973 | 0.995 | 0.987] | A: [98.390% | 99.337% | 99.148%] | L: 0.046 | [0.064 | 0.024 | 0.031]
02/09/2020 05:36:52 PM [28/50] | v_0 | R: 0.668 | [0.456 | 0.874 | 0.887] | A: [61.096% | 90.458% | 92.647%] | L: 1.040 | [1.722 | 0.386 | 0.330]
02/09/2020 05:37:15 PM [29/50] | t_0 | R: 0.965 | [0.951 | 0.986 | 0.973] | A: [97.017% | 98.674% | 98.437%] | L: 0.080 | [0.106 | 0.052 | 0.055]
02/09/2020 05:37:17 PM [29/50] | v_0 | R: 0.631 | [0.438 | 0.810 | 0.840] | A: [59.425% | 88.252% | 88.987%] | L: 1.141 | [1.830 | 0.450 | 0.454]
02/09/2020 05:37:40 PM [30/50] | t_0 | R: 0.968 | [0.964 | 0.982 | 0.963] | A: [98.248% | 98.343% | 98.011%] | L: 0.060 | [0.069 | 0.050 | 0.053]
02/09/2020 05:37:41 PM [30/50] | v_0 | R: 0.656 | [0.458 | 0.826 | 0.884] | A: [60.879% | 89.723% | 90.090%] | L: 1.088 | [1.739 | 0.439 | 0.436]
02/09/2020 05:38:04 PM [31/50] | t_0 | R: 0.971 | [0.966 | 0.978 | 0.975] | A: [98.059% | 98.532% | 98.722%] | L: 0.059 | [0.076 | 0.042 | 0.042]
02/09/2020 05:38:06 PM [31/50] | v_0 | R: 0.681 | [0.502 | 0.873 | 0.845] | A: [64.188% | 89.906% | 90.274%] | L: 1.011 | [1.597 | 0.424 | 0.428]
02/09/2020 05:38:29 PM [32/50] | t_0 | R: 0.981 | [0.974 | 0.990 | 0.985] | A: [98.627% | 99.006% | 98.958%] | L: 0.049 | [0.066 | 0.033 | 0.032]
02/09/2020 05:38:30 PM [32/50] | v_0 | R: 0.644 | [0.437 | 0.837 | 0.866] | A: [60.177% | 89.372% | 91.377%] | L: 1.116 | [1.827 | 0.427 | 0.382]
02/09/2020 05:38:53 PM [33/50] | t_0 | R: 0.982 | [0.975 | 0.988 | 0.989] | A: [98.674% | 98.911% | 99.006%] | L: 0.040 | [0.052 | 0.029 | 0.029]
02/09/2020 05:38:55 PM [33/50] | v_0 | R: 0.678 | [0.481 | 0.852 | 0.896] | A: [63.653% | 89.355% | 92.296%] | L: 1.058 | [1.692 | 0.452 | 0.396]
02/09/2020 05:39:18 PM [34/50] | t_0 | R: 0.979 | [0.974 | 0.987 | 0.981] | A: [98.485% | 98.911% | 99.053%] | L: 0.048 | [0.066 | 0.027 | 0.033]
02/09/2020 05:39:20 PM [34/50] | v_0 | R: 0.674 | [0.489 | 0.836 | 0.883] | A: [64.572% | 88.453% | 92.112%] | L: 0.991 | [1.576 | 0.481 | 0.332]
02/09/2020 05:39:42 PM [35/50] | t_0 | R: 0.985 | [0.977 | 0.996 | 0.990] | A: [98.722% | 99.574% | 99.242%] | L: 0.038 | [0.056 | 0.016 | 0.025]
02/09/2020 05:39:44 PM [35/50] | v_0 | R: 0.678 | [0.489 | 0.856 | 0.880] | A: [64.756% | 91.009% | 93.215%] | L: 0.991 | [1.636 | 0.371 | 0.322]
02/09/2020 05:40:07 PM [36/50] | t_0 | R: 0.972 | [0.966 | 0.987 | 0.971] | A: [98.201% | 98.769% | 98.674%] | L: 0.053 | [0.070 | 0.034 | 0.037]
02/09/2020 05:40:09 PM [36/50] | v_0 | R: 0.631 | [0.432 | 0.829 | 0.828] | A: [59.626% | 89.723% | 91.009%] | L: 1.202 | [2.005 | 0.428 | 0.371]
02/09/2020 05:40:32 PM [37/50] | t_0 | R: 0.983 | [0.976 | 0.992 | 0.987] | A: [98.769% | 99.195% | 99.384%] | L: 0.036 | [0.048 | 0.024 | 0.022]
02/09/2020 05:40:33 PM [37/50] | v_0 | R: 0.682 | [0.481 | 0.873 | 0.892] | A: [64.589% | 91.377% | 94.134%] | L: 0.986 | [1.639 | 0.402 | 0.266]
02/09/2020 05:40:56 PM [38/50] | t_0 | R: 0.983 | [0.976 | 0.991 | 0.989] | A: [98.674% | 99.621% | 99.195%] | L: 0.038 | [0.056 | 0.014 | 0.025]
02/09/2020 05:40:58 PM [38/50] | v_0 | R: 0.668 | [0.478 | 0.817 | 0.898] | A: [63.854% | 88.085% | 93.951%] | L: 0.970 | [1.564 | 0.500 | 0.253]
02/09/2020 05:41:21 PM [39/50] | t_0 | R: 0.988 | [0.986 | 0.990 | 0.989] | A: [99.195% | 99.242% | 99.574%] | L: 0.026 | [0.036 | 0.018 | 0.013]
02/09/2020 05:41:23 PM [39/50] | v_0 | R: 0.675 | [0.495 | 0.832 | 0.878] | A: [64.756% | 88.620% | 93.015%] | L: 1.017 | [1.631 | 0.481 | 0.327]
02/09/2020 05:41:45 PM [40/50] | t_0 | R: 0.991 | [0.987 | 0.995 | 0.995] | A: [99.337% | 99.432% | 99.716%] | L: 0.022 | [0.028 | 0.024 | 0.010]
02/09/2020 05:41:47 PM [40/50] | v_0 | R: 0.661 | [0.481 | 0.851 | 0.833] | A: [64.372% | 89.171% | 91.377%] | L: 0.990 | [1.597 | 0.470 | 0.297]
02/09/2020 05:42:10 PM [41/50] | t_0 | R: 0.992 | [0.990 | 0.993 | 0.994] | A: [99.479% | 99.337% | 99.574%] | L: 0.021 | [0.024 | 0.024 | 0.013]
02/09/2020 05:42:12 PM [41/50] | v_0 | R: 0.681 | [0.487 | 0.844 | 0.907] | A: [65.124% | 89.522% | 92.497%] | L: 1.002 | [1.583 | 0.476 | 0.368]
02/09/2020 05:42:35 PM [42/50] | t_0 | R: 0.992 | [0.990 | 0.991 | 0.999] | A: [99.432% | 99.479% | 99.811%] | L: 0.016 | [0.019 | 0.015 | 0.012]
02/09/2020 05:42:36 PM [42/50] | v_0 | R: 0.661 | [0.464 | 0.838 | 0.878] | A: [62.366% | 88.068% | 91.928%] | L: 1.056 | [1.706 | 0.466 | 0.344]
02/09/2020 05:42:59 PM [43/50] | t_0 | R: 0.992 | [0.990 | 0.988 | 0.999] | A: [99.432% | 99.100% | 99.858%] | L: 0.022 | [0.027 | 0.028 | 0.006]
02/09/2020 05:43:01 PM [43/50] | v_0 | R: 0.680 | [0.495 | 0.845 | 0.884] | A: [65.491% | 88.419% | 92.112%] | L: 1.026 | [1.601 | 0.539 | 0.361]
02/09/2020 05:43:24 PM [44/50] | t_0 | R: 0.983 | [0.977 | 0.986 | 0.993] | A: [98.816% | 99.290% | 99.526%] | L: 0.035 | [0.049 | 0.025 | 0.017]
02/09/2020 05:43:25 PM [44/50] | v_0 | R: 0.645 | [0.472 | 0.801 | 0.836] | A: [63.285% | 86.965% | 90.826%] | L: 1.110 | [1.731 | 0.568 | 0.408]
02/09/2020 05:43:48 PM [45/50] | t_0 | R: 0.983 | [0.978 | 0.995 | 0.981] | A: [98.864% | 99.574% | 99.242%] | L: 0.038 | [0.055 | 0.019 | 0.022]
02/09/2020 05:43:50 PM [45/50] | v_0 | R: 0.663 | [0.464 | 0.829 | 0.894] | A: [62.684% | 88.436% | 92.831%] | L: 1.050 | [1.710 | 0.498 | 0.282]
02/09/2020 05:44:13 PM [46/50] | t_0 | R: 0.986 | [0.991 | 0.984 | 0.979] | A: [99.479% | 99.148% | 98.627%] | L: 0.032 | [0.027 | 0.025 | 0.046]
02/09/2020 05:44:15 PM [46/50] | v_0 | R: 0.673 | [0.501 | 0.835 | 0.857] | A: [65.842% | 89.004% | 91.193%] | L: 1.031 | [1.612 | 0.413 | 0.487]
02/09/2020 05:44:37 PM [47/50] | t_0 | R: 0.983 | [0.978 | 0.987 | 0.988] | A: [98.769% | 99.195% | 99.242%] | L: 0.034 | [0.046 | 0.021 | 0.022]
02/09/2020 05:44:39 PM [47/50] | v_0 | R: 0.684 | [0.493 | 0.862 | 0.888] | A: [63.837% | 89.154% | 92.279%] | L: 1.099 | [1.770 | 0.524 | 0.332]
02/09/2020 05:45:02 PM [48/50] | t_0 | R: 0.984 | [0.978 | 0.980 | 0.999] | A: [98.769% | 99.006% | 99.811%] | L: 0.038 | [0.063 | 0.022 | 0.006]
02/09/2020 05:45:04 PM [48/50] | v_0 | R: 0.677 | [0.472 | 0.848 | 0.913] | A: [62.701% | 89.723% | 93.566%] | L: 1.090 | [1.768 | 0.508 | 0.317]
02/09/2020 05:45:27 PM [49/50] | t_0 | R: 0.991 | [0.986 | 0.995 | 0.998] | A: [99.242% | 99.574% | 99.763%] | L: 0.025 | [0.036 | 0.017 | 0.013]
02/09/2020 05:45:28 PM [49/50] | v_0 | R: 0.674 | [0.463 | 0.880 | 0.889] | A: [61.982% | 91.544% | 91.561%] | L: 1.073 | [1.757 | 0.391 | 0.388]
02/09/2020 05:45:51 PM [50/50] | t_0 | R: 0.983 | [0.973 | 0.991 | 0.993] | A: [98.532% | 99.432% | 99.621%] | L: 0.035 | [0.053 | 0.020 | 0.014]
02/09/2020 05:45:53 PM [50/50] | v_0 | R: 0.669 | [0.488 | 0.833 | 0.867] | A: [63.837% | 88.068% | 91.561%] | L: 1.102 | [1.759 | 0.524 | 0.368]
