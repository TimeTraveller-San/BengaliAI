02/09/2020 03:34:56 AM 

---------------- [LOGS for vanilla_pretrained] ----------------
02/09/2020 03:35:54 AM Freezing model
02/09/2020 03:35:54 AM Project path: test_2/vanilla_pretrained
02/09/2020 03:35:54 AM Model: se_resnext50_32x4d
02/09/2020 03:35:54 AM Model class: <class 'model.ClassifierCNN'>
02/09/2020 03:35:54 AM Debug: False
02/09/2020 03:35:54 AM Batch size: 32
02/09/2020 03:35:54 AM LR: 0.0003
02/09/2020 03:35:54 AM Optimizer: <class 'torch.optim.adam.Adam'>
02/09/2020 03:35:54 AM Weights: [0.5 | 0.25 | 0.25]
02/09/2020 03:35:54 AM Activation: None
02/09/2020 03:35:54 AM Mixup: False
02/09/2020 03:35:54 AM Cutmix: False
02/09/2020 03:35:54 AM Train dataset: <loaddata.BengaliAI object at 0x7f91c4adb748>
02/09/2020 03:35:54 AM Validation dataset: <loaddata.BengaliAI object at 0x7f91c4adb4e0>
02/09/2020 03:35:54 AM Continue: False
02/09/2020 03:35:54 AM Model: ClassifierCNN(
  (first): Conv2d(1, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (model): SENet(
    (layer0): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    )
    (layer1): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer2): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer3): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (4): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (5): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer4): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
    (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (head_grapheme_root): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=168, bias=True)
  )
  (head_vowel_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=11, bias=True)
  )
  (head_consonant_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=7, bias=True)
  )
)
02/09/2020 03:35:54 AM ------------------------------------------------------------
02/09/2020 03:35:54 AM Starting training...
02/09/2020 03:35:54 AM Unfreezing model
02/09/2020 03:36:12 AM [1/50] | t_0 | R: 0.151 | [0.021 | 0.308 | 0.256] | A: [5.398% | 42.566% | 62.121%] | L: 3.067 | [4.710 | 1.722 | 1.126]
02/09/2020 03:36:14 AM [1/50] | v_0 | R: 0.295 | [0.060 | 0.439 | 0.620] | A: [13.035% | 59.793% | 72.510%] | L: 2.563 | [4.123 | 1.234 | 0.773]
02/09/2020 03:36:30 AM [2/50] | t_0 | R: 0.386 | [0.142 | 0.574 | 0.687] | A: [24.337% | 69.129% | 78.362%] | L: 2.074 | [3.361 | 0.937 | 0.636]
02/09/2020 03:36:32 AM [2/50] | v_0 | R: 0.435 | [0.159 | 0.620 | 0.800] | A: [27.507% | 73.930% | 87.350%] | L: 1.849 | [3.097 | 0.757 | 0.445]
02/09/2020 03:36:48 AM [3/50] | t_0 | R: 0.571 | [0.388 | 0.719 | 0.788] | A: [53.551% | 79.830% | 86.458%] | L: 1.154 | [1.816 | 0.588 | 0.396]
02/09/2020 03:36:50 AM [3/50] | v_0 | R: 0.519 | [0.269 | 0.708 | 0.832] | A: [42.012% | 77.941% | 88.469%] | L: 1.516 | [2.537 | 0.611 | 0.378]
02/09/2020 03:37:07 AM [4/50] | t_0 | R: 0.753 | [0.652 | 0.841 | 0.865] | A: [76.847% | 87.642% | 90.625%] | L: 0.604 | [0.880 | 0.384 | 0.273]
02/09/2020 03:37:08 AM [4/50] | v_0 | R: 0.540 | [0.274 | 0.762 | 0.849] | A: [42.363% | 80.515% | 89.923%] | L: 1.523 | [2.585 | 0.592 | 0.329]
02/09/2020 03:37:25 AM [5/50] | t_0 | R: 0.853 | [0.801 | 0.900 | 0.908] | A: [87.595% | 92.519% | 93.371%] | L: 0.334 | [0.459 | 0.246 | 0.174]
02/09/2020 03:37:26 AM [5/50] | v_0 | R: 0.566 | [0.347 | 0.759 | 0.810] | A: [50.819% | 82.186% | 88.453%] | L: 1.333 | [2.186 | 0.555 | 0.405]
02/09/2020 03:37:43 AM [6/50] | t_0 | R: 0.897 | [0.864 | 0.932 | 0.928] | A: [92.140% | 94.650% | 95.833%] | L: 0.221 | [0.293 | 0.172 | 0.124]
02/09/2020 03:37:44 AM [6/50] | v_0 | R: 0.579 | [0.336 | 0.799 | 0.844] | A: [50.067% | 86.213% | 89.355%] | L: 1.373 | [2.319 | 0.471 | 0.380]
02/09/2020 03:38:01 AM [7/50] | t_0 | R: 0.927 | [0.905 | 0.942 | 0.955] | A: [94.223% | 95.691% | 96.544%] | L: 0.161 | [0.203 | 0.132 | 0.105]
02/09/2020 03:38:02 AM [7/50] | v_0 | R: 0.607 | [0.389 | 0.763 | 0.886] | A: [54.144% | 80.348% | 92.480%] | L: 1.388 | [2.312 | 0.645 | 0.283]
02/09/2020 03:38:19 AM [8/50] | t_0 | R: 0.934 | [0.917 | 0.940 | 0.962] | A: [95.170% | 95.644% | 96.970%] | L: 0.146 | [0.184 | 0.129 | 0.086]
02/09/2020 03:38:20 AM [8/50] | v_0 | R: 0.591 | [0.358 | 0.742 | 0.903] | A: [50.652% | 84.408% | 91.728%] | L: 1.348 | [2.266 | 0.520 | 0.340]
02/09/2020 03:38:37 AM [9/50] | t_0 | R: 0.941 | [0.923 | 0.964 | 0.957] | A: [95.691% | 97.585% | 97.254%] | L: 0.127 | [0.166 | 0.080 | 0.093]
02/09/2020 03:38:38 AM [9/50] | v_0 | R: 0.575 | [0.344 | 0.787 | 0.826] | A: [50.618% | 83.840% | 90.090%] | L: 1.477 | [2.456 | 0.627 | 0.372]
02/09/2020 03:38:55 AM [10/50] | t_0 | R: 0.943 | [0.917 | 0.965 | 0.974] | A: [95.265% | 97.348% | 97.727%] | L: 0.123 | [0.171 | 0.080 | 0.068]
02/09/2020 03:38:57 AM [10/50] | v_0 | R: 0.566 | [0.369 | 0.735 | 0.790] | A: [52.841% | 83.305% | 88.620%] | L: 1.479 | [2.370 | 0.696 | 0.480]
02/09/2020 03:39:13 AM [11/50] | t_0 | R: 0.954 | [0.943 | 0.969 | 0.961] | A: [96.686% | 97.964% | 97.964%] | L: 0.095 | [0.123 | 0.068 | 0.066]
02/09/2020 03:39:15 AM [11/50] | v_0 | R: 0.617 | [0.409 | 0.805 | 0.847] | A: [56.100% | 87.149% | 89.171%] | L: 1.293 | [2.124 | 0.483 | 0.441]
02/09/2020 03:39:31 AM [12/50] | t_0 | R: 0.970 | [0.968 | 0.972 | 0.972] | A: [98.106% | 97.869% | 98.390%] | L: 0.071 | [0.083 | 0.064 | 0.054]
02/09/2020 03:39:33 AM [12/50] | v_0 | R: 0.604 | [0.383 | 0.778 | 0.872] | A: [54.144% | 85.127% | 89.355%] | L: 1.371 | [2.221 | 0.564 | 0.477]
02/09/2020 03:39:50 AM [13/50] | t_0 | R: 0.955 | [0.939 | 0.976 | 0.968] | A: [96.449% | 98.059% | 98.059%] | L: 0.087 | [0.118 | 0.057 | 0.056]
02/09/2020 03:39:51 AM [13/50] | v_0 | R: 0.591 | [0.365 | 0.764 | 0.870] | A: [53.192% | 86.781% | 90.274%] | L: 1.443 | [2.376 | 0.586 | 0.436]
02/09/2020 03:40:08 AM [14/50] | t_0 | R: 0.950 | [0.932 | 0.975 | 0.963] | A: [96.259% | 97.964% | 97.633%] | L: 0.098 | [0.128 | 0.077 | 0.059]
02/09/2020 03:40:09 AM [14/50] | v_0 | R: 0.620 | [0.400 | 0.802 | 0.879] | A: [55.548% | 86.614% | 91.561%] | L: 1.310 | [2.194 | 0.512 | 0.341]
02/09/2020 03:40:26 AM [15/50] | t_0 | R: 0.956 | [0.940 | 0.970 | 0.972] | A: [96.449% | 97.491% | 97.775%] | L: 0.099 | [0.123 | 0.073 | 0.075]
02/09/2020 03:40:27 AM [15/50] | v_0 | R: 0.595 | [0.367 | 0.794 | 0.851] | A: [53.025% | 83.840% | 89.004%] | L: 1.451 | [2.372 | 0.562 | 0.497]
02/09/2020 03:40:44 AM [16/50] | t_0 | R: 0.969 | [0.957 | 0.985 | 0.975] | A: [97.585% | 98.627% | 98.722%] | L: 0.064 | [0.085 | 0.048 | 0.038]
02/09/2020 03:40:45 AM [16/50] | v_0 | R: 0.642 | [0.433 | 0.813 | 0.890] | A: [60.344% | 87.166% | 91.377%] | L: 1.284 | [2.067 | 0.594 | 0.406]
02/09/2020 03:41:02 AM [17/50] | t_0 | R: 0.973 | [0.967 | 0.985 | 0.972] | A: [98.153% | 98.437% | 98.390%] | L: 0.057 | [0.061 | 0.049 | 0.057]
02/09/2020 03:41:03 AM [17/50] | v_0 | R: 0.610 | [0.397 | 0.799 | 0.849] | A: [54.863% | 87.166% | 90.625%] | L: 1.417 | [2.373 | 0.551 | 0.372]
02/09/2020 03:41:20 AM [18/50] | t_0 | R: 0.978 | [0.980 | 0.976 | 0.977] | A: [98.864% | 98.769% | 98.627%] | L: 0.044 | [0.047 | 0.036 | 0.045]
02/09/2020 03:41:21 AM [18/50] | v_0 | R: 0.633 | [0.437 | 0.803 | 0.853] | A: [59.275% | 86.798% | 90.642%] | L: 1.278 | [2.089 | 0.580 | 0.353]
02/09/2020 03:41:38 AM [19/50] | t_0 | R: 0.971 | [0.968 | 0.978 | 0.970] | A: [98.295% | 98.627% | 98.390%] | L: 0.054 | [0.065 | 0.041 | 0.045]
02/09/2020 03:41:40 AM [19/50] | v_0 | R: 0.620 | [0.404 | 0.821 | 0.850] | A: [56.166% | 87.901% | 90.826%] | L: 1.356 | [2.225 | 0.602 | 0.370]
02/09/2020 03:41:56 AM [20/50] | t_0 | R: 0.974 | [0.962 | 0.990 | 0.982] | A: [97.964% | 99.290% | 99.148%] | L: 0.047 | [0.066 | 0.028 | 0.029]
02/09/2020 03:41:58 AM [20/50] | v_0 | R: 0.635 | [0.407 | 0.843 | 0.883] | A: [56.133% | 89.004% | 91.377%] | L: 1.368 | [2.283 | 0.486 | 0.418]
02/09/2020 03:42:14 AM [21/50] | t_0 | R: 0.980 | [0.971 | 0.990 | 0.987] | A: [98.390% | 99.384% | 99.148%] | L: 0.040 | [0.054 | 0.026 | 0.027]
02/09/2020 03:42:16 AM [21/50] | v_0 | R: 0.639 | [0.403 | 0.844 | 0.905] | A: [55.765% | 89.004% | 91.745%] | L: 1.419 | [2.350 | 0.525 | 0.453]
02/09/2020 03:42:33 AM [22/50] | t_0 | R: 0.970 | [0.959 | 0.978 | 0.983] | A: [97.822% | 98.579% | 98.958%] | L: 0.053 | [0.069 | 0.043 | 0.032]
02/09/2020 03:42:34 AM [22/50] | v_0 | R: 0.597 | [0.345 | 0.850 | 0.846] | A: [49.315% | 88.787% | 89.205%] | L: 1.638 | [2.787 | 0.511 | 0.466]
02/09/2020 03:42:51 AM [23/50] | t_0 | R: 0.974 | [0.973 | 0.984 | 0.966] | A: [98.295% | 98.627% | 98.153%] | L: 0.067 | [0.087 | 0.049 | 0.045]
02/09/2020 03:42:52 AM [23/50] | v_0 | R: 0.641 | [0.424 | 0.791 | 0.924] | A: [57.035% | 87.918% | 91.761%] | L: 1.407 | [2.381 | 0.545 | 0.320]
02/09/2020 03:43:09 AM [24/50] | t_0 | R: 0.977 | [0.975 | 0.985 | 0.975] | A: [98.532% | 98.958% | 98.816%] | L: 0.047 | [0.054 | 0.030 | 0.050]
02/09/2020 03:43:10 AM [24/50] | v_0 | R: 0.631 | [0.418 | 0.849 | 0.842] | A: [57.403% | 89.338% | 89.188%] | L: 1.458 | [2.419 | 0.503 | 0.490]
02/09/2020 03:43:27 AM [25/50] | t_0 | R: 0.983 | [0.980 | 0.984 | 0.989] | A: [98.911% | 99.053% | 99.195%] | L: 0.039 | [0.048 | 0.034 | 0.027]
02/09/2020 03:43:28 AM [25/50] | v_0 | R: 0.633 | [0.426 | 0.822 | 0.860] | A: [58.673% | 87.533% | 91.210%] | L: 1.337 | [2.158 | 0.684 | 0.349]
02/09/2020 03:43:45 AM [26/50] | t_0 | R: 0.967 | [0.952 | 0.986 | 0.980] | A: [97.396% | 98.769% | 98.769%] | L: 0.063 | [0.089 | 0.037 | 0.036]
02/09/2020 03:43:46 AM [26/50] | v_0 | R: 0.584 | [0.346 | 0.774 | 0.869] | A: [50.953% | 86.614% | 90.107%] | L: 1.680 | [2.818 | 0.613 | 0.470]
02/09/2020 03:44:03 AM [27/50] | t_0 | R: 0.964 | [0.941 | 0.986 | 0.986] | A: [96.591% | 98.769% | 98.864%] | L: 0.076 | [0.109 | 0.046 | 0.039]
02/09/2020 03:44:04 AM [27/50] | v_0 | R: 0.596 | [0.372 | 0.781 | 0.860] | A: [52.807% | 85.328% | 88.820%] | L: 1.641 | [2.705 | 0.630 | 0.525]
02/09/2020 03:44:21 AM [28/50] | t_0 | R: 0.954 | [0.936 | 0.974 | 0.971] | A: [96.401% | 97.964% | 98.674%] | L: 0.098 | [0.144 | 0.060 | 0.044]
02/09/2020 03:44:23 AM [28/50] | v_0 | R: 0.602 | [0.358 | 0.823 | 0.869] | A: [51.755% | 85.862% | 91.009%] | L: 1.481 | [2.532 | 0.514 | 0.348]
02/09/2020 03:44:39 AM [29/50] | t_0 | R: 0.958 | [0.939 | 0.969 | 0.984] | A: [96.780% | 98.248% | 98.722%] | L: 0.079 | [0.112 | 0.053 | 0.038]
02/09/2020 03:44:41 AM [29/50] | v_0 | R: 0.620 | [0.406 | 0.800 | 0.868] | A: [56.852% | 85.311% | 90.107%] | L: 1.480 | [2.454 | 0.566 | 0.447]
02/09/2020 03:44:57 AM [30/50] | t_0 | R: 0.972 | [0.964 | 0.978 | 0.982] | A: [97.917% | 98.201% | 98.674%] | L: 0.060 | [0.078 | 0.049 | 0.034]
02/09/2020 03:44:59 AM [30/50] | v_0 | R: 0.635 | [0.438 | 0.809 | 0.855] | A: [58.305% | 86.982% | 89.906%] | L: 1.400 | [2.315 | 0.589 | 0.380]
02/09/2020 03:45:16 AM [31/50] | t_0 | R: 0.972 | [0.958 | 0.986 | 0.987] | A: [97.491% | 99.148% | 99.148%] | L: 0.059 | [0.087 | 0.030 | 0.030]
02/09/2020 03:45:17 AM [31/50] | v_0 | R: 0.630 | [0.404 | 0.850 | 0.861] | A: [56.166% | 88.085% | 89.171%] | L: 1.449 | [2.397 | 0.545 | 0.457]
02/09/2020 03:45:34 AM [32/50] | t_0 | R: 0.971 | [0.951 | 0.989 | 0.994] | A: [97.206% | 99.148% | 99.479%] | L: 0.056 | [0.085 | 0.031 | 0.024]
02/09/2020 03:45:35 AM [32/50] | v_0 | R: 0.607 | [0.377 | 0.810 | 0.864] | A: [54.713% | 86.414% | 90.658%] | L: 1.564 | [2.627 | 0.601 | 0.401]
02/09/2020 03:45:52 AM [33/50] | t_0 | R: 0.974 | [0.963 | 0.984 | 0.987] | A: [97.869% | 99.100% | 99.148%] | L: 0.050 | [0.070 | 0.037 | 0.025]
02/09/2020 03:45:53 AM [33/50] | v_0 | R: 0.622 | [0.436 | 0.789 | 0.825] | A: [58.356% | 85.678% | 88.269%] | L: 1.566 | [2.505 | 0.697 | 0.556]
02/09/2020 03:46:10 AM [34/50] | t_0 | R: 0.968 | [0.960 | 0.979 | 0.972] | A: [97.585% | 98.864% | 98.816%] | L: 0.063 | [0.082 | 0.051 | 0.036]
02/09/2020 03:46:11 AM [34/50] | v_0 | R: 0.636 | [0.429 | 0.808 | 0.878] | A: [57.771% | 84.241% | 91.026%] | L: 1.427 | [2.260 | 0.706 | 0.481]
02/09/2020 03:46:28 AM [35/50] | t_0 | R: 0.968 | [0.956 | 0.977 | 0.982] | A: [97.538% | 98.627% | 98.769%] | L: 0.060 | [0.078 | 0.046 | 0.037]
02/09/2020 03:46:29 AM [35/50] | v_0 | R: 0.631 | [0.423 | 0.811 | 0.866] | A: [57.453% | 87.166% | 90.074%] | L: 1.434 | [2.349 | 0.573 | 0.467]
02/09/2020 03:46:46 AM [36/50] | t_0 | R: 0.978 | [0.971 | 0.988 | 0.982] | A: [98.485% | 98.722% | 99.242%] | L: 0.045 | [0.059 | 0.039 | 0.022]
02/09/2020 03:46:47 AM [36/50] | v_0 | R: 0.653 | [0.445 | 0.841 | 0.883] | A: [61.314% | 88.269% | 91.026%] | L: 1.372 | [2.274 | 0.474 | 0.466]
02/09/2020 03:47:04 AM [37/50] | t_0 | R: 0.978 | [0.970 | 0.989 | 0.982] | A: [98.343% | 99.195% | 98.958%] | L: 0.044 | [0.060 | 0.026 | 0.028]
02/09/2020 03:47:06 AM [37/50] | v_0 | R: 0.630 | [0.394 | 0.849 | 0.884] | A: [55.799% | 89.355% | 91.009%] | L: 1.485 | [2.471 | 0.536 | 0.464]
02/09/2020 03:47:22 AM [38/50] | t_0 | R: 0.978 | [0.975 | 0.991 | 0.971] | A: [98.627% | 99.337% | 98.722%] | L: 0.035 | [0.038 | 0.025 | 0.037]
02/09/2020 03:47:24 AM [38/50] | v_0 | R: 0.637 | [0.419 | 0.839 | 0.872] | A: [57.604% | 88.636% | 92.296%] | L: 1.384 | [2.352 | 0.478 | 0.355]
02/09/2020 03:47:41 AM [39/50] | t_0 | R: 0.990 | [0.990 | 0.990 | 0.989] | A: [99.526% | 99.337% | 99.432%] | L: 0.021 | [0.023 | 0.017 | 0.021]
02/09/2020 03:47:42 AM [39/50] | v_0 | R: 0.657 | [0.447 | 0.845 | 0.887] | A: [60.729% | 89.188% | 91.377%] | L: 1.302 | [2.146 | 0.491 | 0.426]
02/09/2020 03:47:59 AM [40/50] | t_0 | R: 0.990 | [0.989 | 0.996 | 0.986] | A: [99.384% | 99.526% | 99.432%] | L: 0.019 | [0.021 | 0.013 | 0.023]
02/09/2020 03:48:00 AM [40/50] | v_0 | R: 0.661 | [0.453 | 0.837 | 0.901] | A: [61.280% | 88.453% | 91.945%] | L: 1.305 | [2.153 | 0.561 | 0.351]
02/09/2020 03:48:17 AM [41/50] | t_0 | R: 0.992 | [0.986 | 0.998 | 0.998] | A: [99.242% | 99.811% | 99.716%] | L: 0.017 | [0.025 | 0.008 | 0.010]
02/09/2020 03:48:18 AM [41/50] | v_0 | R: 0.657 | [0.439 | 0.834 | 0.915] | A: [59.843% | 88.820% | 93.048%] | L: 1.344 | [2.243 | 0.530 | 0.362]
02/09/2020 03:48:35 AM [42/50] | t_0 | R: 0.988 | [0.981 | 0.994 | 0.995] | A: [99.006% | 99.574% | 99.668%] | L: 0.026 | [0.038 | 0.014 | 0.014]
02/09/2020 03:48:36 AM [42/50] | v_0 | R: 0.646 | [0.440 | 0.836 | 0.867] | A: [59.626% | 88.068% | 91.193%] | L: 1.475 | [2.426 | 0.574 | 0.475]
02/09/2020 03:48:53 AM [43/50] | t_0 | R: 0.987 | [0.981 | 0.991 | 0.995] | A: [98.911% | 99.384% | 99.574%] | L: 0.028 | [0.038 | 0.024 | 0.014]
02/09/2020 03:48:54 AM [43/50] | v_0 | R: 0.647 | [0.426 | 0.848 | 0.888] | A: [58.523% | 90.090% | 91.377%] | L: 1.459 | [2.460 | 0.499 | 0.417]
02/09/2020 03:49:11 AM [44/50] | t_0 | R: 0.986 | [0.981 | 0.993 | 0.989] | A: [98.816% | 99.384% | 99.574%] | L: 0.032 | [0.044 | 0.019 | 0.020]
02/09/2020 03:49:12 AM [44/50] | v_0 | R: 0.644 | [0.437 | 0.811 | 0.889] | A: [59.626% | 88.235% | 92.129%] | L: 1.518 | [2.526 | 0.596 | 0.425]
02/09/2020 03:49:29 AM [45/50] | t_0 | R: 0.974 | [0.962 | 0.986 | 0.986] | A: [97.917% | 98.864% | 98.816%] | L: 0.054 | [0.071 | 0.035 | 0.038]
02/09/2020 03:49:31 AM [45/50] | v_0 | R: 0.624 | [0.403 | 0.826 | 0.862] | A: [55.966% | 89.706% | 90.826%] | L: 1.489 | [2.486 | 0.541 | 0.445]
02/09/2020 03:49:47 AM [46/50] | t_0 | R: 0.979 | [0.975 | 0.980 | 0.985] | A: [98.485% | 98.816% | 98.769%] | L: 0.041 | [0.049 | 0.036 | 0.033]
02/09/2020 03:49:49 AM [46/50] | v_0 | R: 0.625 | [0.404 | 0.824 | 0.868] | A: [54.863% | 88.235% | 91.377%] | L: 1.477 | [2.490 | 0.607 | 0.321]
02/09/2020 03:50:05 AM [47/50] | t_0 | R: 0.970 | [0.959 | 0.981 | 0.979] | A: [97.633% | 98.674% | 99.053%] | L: 0.062 | [0.091 | 0.038 | 0.028]
02/09/2020 03:50:07 AM [47/50] | v_0 | R: 0.637 | [0.406 | 0.850 | 0.885] | A: [57.069% | 88.803% | 92.497%] | L: 1.414 | [2.317 | 0.584 | 0.439]
02/09/2020 03:50:24 AM [48/50] | t_0 | R: 0.959 | [0.943 | 0.982 | 0.969] | A: [96.828% | 98.579% | 98.059%] | L: 0.083 | [0.108 | 0.049 | 0.065]
02/09/2020 03:50:25 AM [48/50] | v_0 | R: 0.616 | [0.388 | 0.801 | 0.885] | A: [53.559% | 86.765% | 91.210%] | L: 1.527 | [2.587 | 0.562 | 0.375]
02/09/2020 03:50:42 AM [49/50] | t_0 | R: 0.965 | [0.951 | 0.978 | 0.978] | A: [97.396% | 98.722% | 98.579%] | L: 0.064 | [0.092 | 0.034 | 0.038]
02/09/2020 03:50:43 AM [49/50] | v_0 | R: 0.622 | [0.393 | 0.836 | 0.867] | A: [56.100% | 89.539% | 91.193%] | L: 1.468 | [2.455 | 0.540 | 0.423]
02/09/2020 03:51:00 AM [50/50] | t_0 | R: 0.981 | [0.974 | 0.993 | 0.984] | A: [98.627% | 99.479% | 98.722%] | L: 0.041 | [0.056 | 0.017 | 0.035]
02/09/2020 03:51:01 AM [50/50] | v_0 | R: 0.629 | [0.388 | 0.838 | 0.901] | A: [54.679% | 88.051% | 91.544%] | L: 1.444 | [2.408 | 0.602 | 0.357]
