02/09/2020 03:51:31 AM 

---------------- [LOGS for vanilla_pretrained_rgb] ----------------
02/09/2020 03:52:29 AM Freezing model
02/09/2020 03:52:29 AM Project path: test_2/vanilla_pretrained_rgb
02/09/2020 03:52:29 AM Model: se_resnext50_32x4d
02/09/2020 03:52:29 AM Model class: <class 'model.ClassifierCNN'>
02/09/2020 03:52:29 AM Debug: False
02/09/2020 03:52:29 AM Batch size: 32
02/09/2020 03:52:29 AM LR: 0.0003
02/09/2020 03:52:29 AM Optimizer: <class 'torch.optim.adam.Adam'>
02/09/2020 03:52:29 AM Weights: [0.5 | 0.25 | 0.25]
02/09/2020 03:52:29 AM Activation: None
02/09/2020 03:52:29 AM Mixup: False
02/09/2020 03:52:29 AM Cutmix: False
02/09/2020 03:52:29 AM Train dataset: <loaddata.BengaliAI object at 0x7fbe447dc6a0>
02/09/2020 03:52:29 AM Validation dataset: <loaddata.BengaliAI object at 0x7fbe447dc470>
02/09/2020 03:52:29 AM Continue: False
02/09/2020 03:52:29 AM Model: ClassifierCNN(
  (first): RGB()
  (model): SENet(
    (layer0): Sequential(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    )
    (layer1): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer2): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer3): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (3): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (4): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (5): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (layer4): Sequential(
      (0): SEResNeXtBottleneck(
        (conv1): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
      (2): SEResNeXtBottleneck(
        (conv1): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (se_module): SEModule(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
          (relu): ReLU(inplace=True)
          (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
        )
      )
    )
    (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
    (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (head_grapheme_root): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=168, bias=True)
  )
  (head_vowel_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=11, bias=True)
  )
  (head_consonant_diacritic): AdaptiveHead(
    (pool): GeM(p=3.0000, eps=1e-06)
    (l1): Linear(in_features=2048, out_features=7, bias=True)
  )
)
02/09/2020 03:52:29 AM ------------------------------------------------------------
02/09/2020 03:52:29 AM Starting training...
02/09/2020 03:52:29 AM Unfreezing model
02/09/2020 03:52:47 AM [1/50] | t_0 | R: 0.153 | [0.018 | 0.316 | 0.262] | A: [4.924% | 43.371% | 61.790%] | L: 3.092 | [4.748 | 1.717 | 1.155]
02/09/2020 03:52:49 AM [1/50] | v_0 | R: 0.265 | [0.032 | 0.449 | 0.546] | A: [8.055% | 60.361% | 74.682%] | L: 2.665 | [4.352 | 1.182 | 0.772]
02/09/2020 03:53:05 AM [2/50] | t_0 | R: 0.371 | [0.121 | 0.590 | 0.653] | A: [21.259% | 69.129% | 78.030%] | L: 2.160 | [3.522 | 0.948 | 0.647]
02/09/2020 03:53:06 AM [2/50] | v_0 | R: 0.423 | [0.155 | 0.623 | 0.758] | A: [27.523% | 73.930% | 84.793%] | L: 1.923 | [3.192 | 0.834 | 0.472]
02/09/2020 03:53:23 AM [3/50] | t_0 | R: 0.550 | [0.349 | 0.721 | 0.780] | A: [49.006% | 79.403% | 85.038%] | L: 1.272 | [2.035 | 0.586 | 0.433]
02/09/2020 03:53:24 AM [3/50] | v_0 | R: 0.501 | [0.264 | 0.714 | 0.764] | A: [40.709% | 77.239% | 86.430%] | L: 1.555 | [2.580 | 0.642 | 0.419]
02/09/2020 03:53:40 AM [4/50] | t_0 | R: 0.720 | [0.599 | 0.840 | 0.842] | A: [73.153% | 87.547% | 91.004%] | L: 0.658 | [0.984 | 0.392 | 0.274]
02/09/2020 03:53:42 AM [4/50] | v_0 | R: 0.554 | [0.326 | 0.750 | 0.815] | A: [46.959% | 80.381% | 89.004%] | L: 1.434 | [2.411 | 0.561 | 0.354]
02/09/2020 03:53:58 AM [5/50] | t_0 | R: 0.839 | [0.785 | 0.892 | 0.893] | A: [86.648% | 91.146% | 93.182%] | L: 0.355 | [0.482 | 0.260 | 0.197]
02/09/2020 03:53:59 AM [5/50] | v_0 | R: 0.574 | [0.312 | 0.833 | 0.837] | A: [46.223% | 87.701% | 89.906%] | L: 1.387 | [2.376 | 0.455 | 0.343]
02/09/2020 03:54:16 AM [6/50] | t_0 | R: 0.891 | [0.857 | 0.927 | 0.921] | A: [91.477% | 94.460% | 94.886%] | L: 0.243 | [0.319 | 0.186 | 0.148]
02/09/2020 03:54:17 AM [6/50] | v_0 | R: 0.578 | [0.344 | 0.816 | 0.808] | A: [50.635% | 85.846% | 88.620%] | L: 1.310 | [2.214 | 0.454 | 0.358]
02/09/2020 03:54:33 AM [7/50] | t_0 | R: 0.932 | [0.923 | 0.951 | 0.933] | A: [95.549% | 96.307% | 95.597%] | L: 0.151 | [0.180 | 0.119 | 0.126]
02/09/2020 03:54:35 AM [7/50] | v_0 | R: 0.621 | [0.416 | 0.818 | 0.835] | A: [56.668% | 87.517% | 90.274%] | L: 1.225 | [2.055 | 0.492 | 0.296]
02/09/2020 03:54:51 AM [8/50] | t_0 | R: 0.935 | [0.920 | 0.946 | 0.956] | A: [95.502% | 96.354% | 97.159%] | L: 0.132 | [0.167 | 0.111 | 0.083]
02/09/2020 03:54:52 AM [8/50] | v_0 | R: 0.613 | [0.385 | 0.821 | 0.861] | A: [52.256% | 86.965% | 90.090%] | L: 1.300 | [2.218 | 0.427 | 0.338]
02/09/2020 03:55:09 AM [9/50] | t_0 | R: 0.943 | [0.922 | 0.968 | 0.958] | A: [95.265% | 97.443% | 97.538%] | L: 0.125 | [0.161 | 0.099 | 0.077]
02/09/2020 03:55:10 AM [9/50] | v_0 | R: 0.616 | [0.387 | 0.842 | 0.847] | A: [53.543% | 88.252% | 90.090%] | L: 1.331 | [2.278 | 0.437 | 0.328]
02/09/2020 03:55:26 AM [10/50] | t_0 | R: 0.950 | [0.933 | 0.975 | 0.960] | A: [96.165% | 98.295% | 98.059%] | L: 0.096 | [0.131 | 0.061 | 0.060]
02/09/2020 03:55:28 AM [10/50] | v_0 | R: 0.594 | [0.347 | 0.833 | 0.850] | A: [49.883% | 87.533% | 90.458%] | L: 1.347 | [2.298 | 0.442 | 0.351]
02/09/2020 03:55:44 AM [11/50] | t_0 | R: 0.949 | [0.932 | 0.963 | 0.968] | A: [96.165% | 97.490% | 97.822%] | L: 0.108 | [0.142 | 0.079 | 0.071]
02/09/2020 03:55:45 AM [11/50] | v_0 | R: 0.603 | [0.383 | 0.774 | 0.872] | A: [53.041% | 86.430% | 91.193%] | L: 1.355 | [2.295 | 0.490 | 0.339]
02/09/2020 03:56:02 AM [12/50] | t_0 | R: 0.951 | [0.932 | 0.966 | 0.972] | A: [96.307% | 97.585% | 97.964%] | L: 0.103 | [0.135 | 0.072 | 0.069]
02/09/2020 03:56:03 AM [12/50] | v_0 | R: 0.607 | [0.410 | 0.825 | 0.782] | A: [55.381% | 87.333% | 87.517%] | L: 1.343 | [2.198 | 0.496 | 0.480]
02/09/2020 03:56:19 AM [13/50] | t_0 | R: 0.960 | [0.951 | 0.973 | 0.964] | A: [97.348% | 98.153% | 98.153%] | L: 0.086 | [0.114 | 0.063 | 0.054]
02/09/2020 03:56:21 AM [13/50] | v_0 | R: 0.625 | [0.404 | 0.838 | 0.852] | A: [55.949% | 87.149% | 89.355%] | L: 1.310 | [2.199 | 0.406 | 0.436]
02/09/2020 03:56:37 AM [14/50] | t_0 | R: 0.956 | [0.937 | 0.978 | 0.972] | A: [96.638% | 98.390% | 98.532%] | L: 0.082 | [0.115 | 0.054 | 0.045]
02/09/2020 03:56:38 AM [14/50] | v_0 | R: 0.620 | [0.404 | 0.819 | 0.852] | A: [55.966% | 88.436% | 92.112%] | L: 1.288 | [2.200 | 0.447 | 0.307]
02/09/2020 03:56:55 AM [15/50] | t_0 | R: 0.958 | [0.949 | 0.972 | 0.963] | A: [97.064% | 97.869% | 97.585%] | L: 0.092 | [0.116 | 0.070 | 0.067]
02/09/2020 03:56:56 AM [15/50] | v_0 | R: 0.593 | [0.368 | 0.831 | 0.806] | A: [51.370% | 86.781% | 88.436%] | L: 1.406 | [2.353 | 0.496 | 0.423]
02/09/2020 03:57:12 AM [16/50] | t_0 | R: 0.962 | [0.949 | 0.980 | 0.971] | A: [97.159% | 98.295% | 98.437%] | L: 0.075 | [0.097 | 0.057 | 0.048]
02/09/2020 03:57:14 AM [16/50] | v_0 | R: 0.627 | [0.402 | 0.847 | 0.856] | A: [55.047% | 90.274% | 89.723%] | L: 1.417 | [2.420 | 0.365 | 0.464]
02/09/2020 03:57:30 AM [17/50] | t_0 | R: 0.966 | [0.947 | 0.987 | 0.983] | A: [96.970% | 99.006% | 98.816%] | L: 0.070 | [0.099 | 0.035 | 0.045]
02/09/2020 03:57:31 AM [17/50] | v_0 | R: 0.620 | [0.405 | 0.815 | 0.855] | A: [55.565% | 88.636% | 90.642%] | L: 1.424 | [2.423 | 0.448 | 0.404]
02/09/2020 03:57:48 AM [18/50] | t_0 | R: 0.962 | [0.946 | 0.983 | 0.974] | A: [96.875% | 98.532% | 98.769%] | L: 0.080 | [0.114 | 0.050 | 0.039]
02/09/2020 03:57:49 AM [18/50] | v_0 | R: 0.646 | [0.429 | 0.826 | 0.899] | A: [58.506% | 86.781% | 92.096%] | L: 1.372 | [2.305 | 0.553 | 0.324]
02/09/2020 03:58:05 AM [19/50] | t_0 | R: 0.974 | [0.962 | 0.989 | 0.983] | A: [97.727% | 98.722% | 98.864%] | L: 0.057 | [0.071 | 0.044 | 0.041]
02/09/2020 03:58:07 AM [19/50] | v_0 | R: 0.645 | [0.428 | 0.832 | 0.894] | A: [58.523% | 87.901% | 92.848%] | L: 1.274 | [2.190 | 0.438 | 0.279]
02/09/2020 03:58:23 AM [20/50] | t_0 | R: 0.979 | [0.970 | 0.989 | 0.987] | A: [98.437% | 98.769% | 99.053%] | L: 0.045 | [0.054 | 0.042 | 0.028]
02/09/2020 03:58:24 AM [20/50] | v_0 | R: 0.628 | [0.397 | 0.831 | 0.886] | A: [54.830% | 86.414% | 90.826%] | L: 1.494 | [2.461 | 0.546 | 0.508]
02/09/2020 03:58:41 AM [21/50] | t_0 | R: 0.966 | [0.951 | 0.984 | 0.979] | A: [97.348% | 98.911% | 98.579%] | L: 0.065 | [0.089 | 0.038 | 0.044]
02/09/2020 03:58:42 AM [21/50] | v_0 | R: 0.619 | [0.392 | 0.812 | 0.879] | A: [54.529% | 88.051% | 91.377%] | L: 1.435 | [2.444 | 0.473 | 0.376]
02/09/2020 03:58:59 AM [22/50] | t_0 | R: 0.973 | [0.961 | 0.989 | 0.981] | A: [97.869% | 99.337% | 99.006%] | L: 0.050 | [0.073 | 0.028 | 0.024]
02/09/2020 03:59:00 AM [22/50] | v_0 | R: 0.653 | [0.453 | 0.831 | 0.875] | A: [60.177% | 87.333% | 91.193%] | L: 1.290 | [2.129 | 0.514 | 0.387]
02/09/2020 03:59:16 AM [23/50] | t_0 | R: 0.976 | [0.966 | 0.987 | 0.986] | A: [98.011% | 99.053% | 99.006%] | L: 0.051 | [0.073 | 0.028 | 0.032]
02/09/2020 03:59:18 AM [23/50] | v_0 | R: 0.636 | [0.414 | 0.829 | 0.888] | A: [57.403% | 86.798% | 91.377%] | L: 1.356 | [2.259 | 0.513 | 0.394]
02/09/2020 03:59:34 AM [24/50] | t_0 | R: 0.971 | [0.969 | 0.984 | 0.962] | A: [98.201% | 99.053% | 98.343%] | L: 0.058 | [0.071 | 0.039 | 0.049]
02/09/2020 03:59:35 AM [24/50] | v_0 | R: 0.634 | [0.420 | 0.809 | 0.888] | A: [57.787% | 86.982% | 91.009%] | L: 1.376 | [2.245 | 0.531 | 0.485]
02/09/2020 03:59:52 AM [25/50] | t_0 | R: 0.971 | [0.956 | 0.991 | 0.982] | A: [97.585% | 99.195% | 99.053%] | L: 0.056 | [0.083 | 0.027 | 0.031]
02/09/2020 03:59:53 AM [25/50] | v_0 | R: 0.625 | [0.419 | 0.840 | 0.823] | A: [57.587% | 89.739% | 88.987%] | L: 1.392 | [2.333 | 0.429 | 0.474]
02/09/2020 04:00:09 AM [26/50] | t_0 | R: 0.974 | [0.969 | 0.983 | 0.975] | A: [98.295% | 98.769% | 98.390%] | L: 0.054 | [0.065 | 0.042 | 0.044]
02/09/2020 04:00:11 AM [26/50] | v_0 | R: 0.618 | [0.423 | 0.825 | 0.802] | A: [58.339% | 88.252% | 87.884%] | L: 1.400 | [2.237 | 0.544 | 0.583]
02/09/2020 04:00:27 AM [27/50] | t_0 | R: 0.974 | [0.969 | 0.977 | 0.980] | A: [98.106% | 98.722% | 98.532%] | L: 0.057 | [0.073 | 0.041 | 0.040]
02/09/2020 04:00:28 AM [27/50] | v_0 | R: 0.634 | [0.411 | 0.827 | 0.889] | A: [57.219% | 88.436% | 91.193%] | L: 1.416 | [2.392 | 0.525 | 0.354]
02/09/2020 04:00:45 AM [28/50] | t_0 | R: 0.972 | [0.965 | 0.978 | 0.978] | A: [98.059% | 98.390% | 99.006%] | L: 0.054 | [0.069 | 0.045 | 0.031]
02/09/2020 04:00:46 AM [28/50] | v_0 | R: 0.638 | [0.433 | 0.837 | 0.851] | A: [59.425% | 87.533% | 89.723%] | L: 1.400 | [2.353 | 0.463 | 0.431]
02/09/2020 04:01:02 AM [29/50] | t_0 | R: 0.971 | [0.970 | 0.973 | 0.972] | A: [98.295% | 97.917% | 98.911%] | L: 0.060 | [0.070 | 0.067 | 0.034]
02/09/2020 04:01:04 AM [29/50] | v_0 | R: 0.619 | [0.428 | 0.804 | 0.819] | A: [59.626% | 84.943% | 90.458%] | L: 1.318 | [2.175 | 0.568 | 0.355]
02/09/2020 04:01:20 AM [30/50] | t_0 | R: 0.973 | [0.968 | 0.980 | 0.974] | A: [98.248% | 98.722% | 98.201%] | L: 0.051 | [0.065 | 0.032 | 0.043]
02/09/2020 04:01:21 AM [30/50] | v_0 | R: 0.624 | [0.439 | 0.824 | 0.793] | A: [60.311% | 88.436% | 88.803%] | L: 1.410 | [2.269 | 0.527 | 0.573]
02/09/2020 04:01:38 AM [31/50] | t_0 | R: 0.968 | [0.959 | 0.973 | 0.983] | A: [97.869% | 98.011% | 98.958%] | L: 0.058 | [0.073 | 0.045 | 0.039]
02/09/2020 04:01:39 AM [31/50] | v_0 | R: 0.619 | [0.413 | 0.795 | 0.856] | A: [58.339% | 86.781% | 91.009%] | L: 1.404 | [2.305 | 0.611 | 0.395]
02/09/2020 04:01:55 AM [32/50] | t_0 | R: 0.966 | [0.957 | 0.979 | 0.973] | A: [97.680% | 98.627% | 98.201%] | L: 0.062 | [0.073 | 0.051 | 0.050]
02/09/2020 04:01:57 AM [32/50] | v_0 | R: 0.612 | [0.380 | 0.845 | 0.843] | A: [54.312% | 88.252% | 91.928%] | L: 1.361 | [2.292 | 0.538 | 0.319]
02/09/2020 04:02:13 AM [33/50] | t_0 | R: 0.967 | [0.958 | 0.975 | 0.978] | A: [97.775% | 98.722% | 98.674%] | L: 0.063 | [0.086 | 0.044 | 0.033]
02/09/2020 04:02:14 AM [33/50] | v_0 | R: 0.659 | [0.449 | 0.843 | 0.893] | A: [61.631% | 90.642% | 92.664%] | L: 1.228 | [1.999 | 0.499 | 0.413]
02/09/2020 04:02:31 AM [34/50] | t_0 | R: 0.958 | [0.944 | 0.970 | 0.973] | A: [96.875% | 98.390% | 98.390%] | L: 0.073 | [0.100 | 0.047 | 0.043]
02/09/2020 04:02:32 AM [34/50] | v_0 | R: 0.613 | [0.394 | 0.820 | 0.844] | A: [55.799% | 87.717% | 90.274%] | L: 1.453 | [2.312 | 0.612 | 0.574]
02/09/2020 04:02:48 AM [35/50] | t_0 | R: 0.974 | [0.963 | 0.991 | 0.979] | A: [98.059% | 98.911% | 98.579%] | L: 0.059 | [0.082 | 0.031 | 0.041]
02/09/2020 04:02:50 AM [35/50] | v_0 | R: 0.613 | [0.403 | 0.781 | 0.866] | A: [56.517% | 85.127% | 90.274%] | L: 1.443 | [2.334 | 0.598 | 0.507]
02/09/2020 04:03:06 AM [36/50] | t_0 | R: 0.975 | [0.964 | 0.988 | 0.982] | A: [98.153% | 98.911% | 98.911%] | L: 0.048 | [0.066 | 0.028 | 0.033]
02/09/2020 04:03:07 AM [36/50] | v_0 | R: 0.650 | [0.426 | 0.855 | 0.893] | A: [57.637% | 89.906% | 91.561%] | L: 1.309 | [2.181 | 0.482 | 0.390]
02/09/2020 04:03:24 AM [37/50] | t_0 | R: 0.981 | [0.972 | 0.987 | 0.994] | A: [98.627% | 99.006% | 99.432%] | L: 0.037 | [0.048 | 0.031 | 0.021]
02/09/2020 04:03:25 AM [37/50] | v_0 | R: 0.633 | [0.425 | 0.840 | 0.841] | A: [57.453% | 87.517% | 88.620%] | L: 1.409 | [2.240 | 0.607 | 0.548]
02/09/2020 04:03:42 AM [38/50] | t_0 | R: 0.976 | [0.964 | 0.982 | 0.992] | A: [97.822% | 98.958% | 99.290%] | L: 0.055 | [0.079 | 0.035 | 0.027]
02/09/2020 04:03:43 AM [38/50] | v_0 | R: 0.651 | [0.424 | 0.869 | 0.888] | A: [57.620% | 89.539% | 91.745%] | L: 1.463 | [2.463 | 0.513 | 0.414]
02/09/2020 04:03:59 AM [39/50] | t_0 | R: 0.967 | [0.954 | 0.985 | 0.975] | A: [97.348% | 98.864% | 99.195%] | L: 0.056 | [0.085 | 0.032 | 0.021]
02/09/2020 04:04:00 AM [39/50] | v_0 | R: 0.642 | [0.417 | 0.844 | 0.891] | A: [58.155% | 88.987% | 91.561%] | L: 1.424 | [2.405 | 0.528 | 0.357]
02/09/2020 04:04:17 AM [40/50] | t_0 | R: 0.974 | [0.959 | 0.989 | 0.990] | A: [97.633% | 98.958% | 99.195%] | L: 0.061 | [0.089 | 0.037 | 0.028]
02/09/2020 04:04:18 AM [40/50] | v_0 | R: 0.642 | [0.415 | 0.863 | 0.873] | A: [57.253% | 90.274% | 91.009%] | L: 1.488 | [2.547 | 0.489 | 0.370]
02/09/2020 04:04:35 AM [41/50] | t_0 | R: 0.978 | [0.972 | 0.984 | 0.984] | A: [98.390% | 98.627% | 98.911%] | L: 0.050 | [0.061 | 0.043 | 0.035]
02/09/2020 04:04:36 AM [41/50] | v_0 | R: 0.656 | [0.440 | 0.884 | 0.860] | A: [60.194% | 89.539% | 90.625%] | L: 1.416 | [2.342 | 0.545 | 0.435]
02/09/2020 04:04:52 AM [42/50] | t_0 | R: 0.981 | [0.970 | 0.985 | 0.997] | A: [98.390% | 98.816% | 99.621%] | L: 0.036 | [0.045 | 0.037 | 0.017]
02/09/2020 04:04:54 AM [42/50] | v_0 | R: 0.644 | [0.432 | 0.856 | 0.856] | A: [58.907% | 88.803% | 91.377%] | L: 1.399 | [2.304 | 0.615 | 0.375]
02/09/2020 04:05:10 AM [43/50] | t_0 | R: 0.984 | [0.974 | 0.997 | 0.991] | A: [98.343% | 99.479% | 99.337%] | L: 0.046 | [0.073 | 0.021 | 0.018]
02/09/2020 04:05:11 AM [43/50] | v_0 | R: 0.661 | [0.443 | 0.862 | 0.897] | A: [61.096% | 90.842% | 90.826%] | L: 1.336 | [2.220 | 0.464 | 0.438]
02/09/2020 04:05:28 AM [44/50] | t_0 | R: 0.982 | [0.971 | 0.995 | 0.988] | A: [98.343% | 99.621% | 98.958%] | L: 0.039 | [0.056 | 0.014 | 0.031]
02/09/2020 04:05:29 AM [44/50] | v_0 | R: 0.660 | [0.443 | 0.896 | 0.860] | A: [59.425% | 91.176% | 91.009%] | L: 1.268 | [2.114 | 0.414 | 0.428]
02/09/2020 04:05:45 AM [45/50] | t_0 | R: 0.982 | [0.970 | 0.989 | 0.997] | A: [98.390% | 99.384% | 99.716%] | L: 0.036 | [0.054 | 0.022 | 0.012]
02/09/2020 04:05:47 AM [45/50] | v_0 | R: 0.671 | [0.469 | 0.861 | 0.882] | A: [61.631% | 89.723% | 90.441%] | L: 1.298 | [2.159 | 0.492 | 0.380]
02/09/2020 04:06:03 AM [46/50] | t_0 | R: 0.988 | [0.981 | 0.990 | 0.997] | A: [98.911% | 99.242% | 99.763%] | L: 0.031 | [0.045 | 0.025 | 0.010]
02/09/2020 04:06:04 AM [46/50] | v_0 | R: 0.647 | [0.449 | 0.876 | 0.814] | A: [59.993% | 89.906% | 90.074%] | L: 1.384 | [2.286 | 0.532 | 0.432]
02/09/2020 04:06:21 AM [47/50] | t_0 | R: 0.977 | [0.966 | 0.992 | 0.986] | A: [98.011% | 98.864% | 99.006%] | L: 0.052 | [0.071 | 0.034 | 0.030]
02/09/2020 04:06:22 AM [47/50] | v_0 | R: 0.635 | [0.429 | 0.860 | 0.822] | A: [57.035% | 88.620% | 90.458%] | L: 1.340 | [2.267 | 0.499 | 0.328]
02/09/2020 04:06:38 AM [48/50] | t_0 | R: 0.977 | [0.966 | 0.987 | 0.988] | A: [98.011% | 99.100% | 99.006%] | L: 0.052 | [0.076 | 0.032 | 0.024]
02/09/2020 04:06:40 AM [48/50] | v_0 | R: 0.669 | [0.477 | 0.887 | 0.835] | A: [62.550% | 90.826% | 89.739%] | L: 1.254 | [2.033 | 0.436 | 0.516]
02/09/2020 04:06:56 AM [49/50] | t_0 | R: 0.981 | [0.973 | 0.987 | 0.991] | A: [98.674% | 99.006% | 99.337%] | L: 0.040 | [0.052 | 0.033 | 0.022]
02/09/2020 04:06:57 AM [49/50] | v_0 | R: 0.679 | [0.475 | 0.893 | 0.875] | A: [62.366% | 91.928% | 90.274%] | L: 1.314 | [2.142 | 0.439 | 0.532]
02/09/2020 04:07:14 AM [50/50] | t_0 | R: 0.984 | [0.983 | 0.987 | 0.981] | A: [99.195% | 99.290% | 99.053%] | L: 0.028 | [0.031 | 0.021 | 0.029]
02/09/2020 04:07:15 AM [50/50] | v_0 | R: 0.673 | [0.469 | 0.876 | 0.877] | A: [62.350% | 89.923% | 92.279%] | L: 1.284 | [2.164 | 0.450 | 0.360]
